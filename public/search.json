[
  {
    "objectID": "workflow.html",
    "href": "workflow.html",
    "title": "Manual",
    "section": "",
    "text": "If you haven’t done so already, please read Introduction to familiarize yourself with the steps of TriplotGUI. In this manual section, we will go through the statistical analysis and visualization involved in each step of TriplotGUI. If you want to search for the meaning of something specific (e.g., a button or a box), please press ctrl+F and enter the keyword; you will likely find what you need.\nIf you have not opened the app yet, you can use the web application of TriplotGUI or follow the Setup section to open the interface using TriplotGUI_shiny()."
  },
  {
    "objectID": "workflow.html#data-for-pcawgcna",
    "href": "workflow.html#data-for-pcawgcna",
    "title": "Manual",
    "section": "\n1.1 Data for PCA/WGCNA",
    "text": "1.1 Data for PCA/WGCNA\n\n1.1.1 Basics\nThe darkblue box is for uploading Omics data, which should meet these criteria:\n\nThe data must be in either csv, xlsx, rds, or rda format. If using rds format, it should be a dataframe. In the case of rda format, the rda object should contain only one dataframe.\nThe rows of data should represent observations, while the columns should represent variables (Omics features).\nVariable names (column names) must not contain special characters such as ' ', '(', ')', ':', '/', '-', ',', or '@'.\nNo missing values are allowed in the Omics data.\nAdditionally, the number and order of observations must be the same across all uploaded data.\n\n\n\n\n\n\n\nNote\n\n\n\nIn TriplotGUI, we do not provide functionalities for handling missing data or other data pre-processing (e.g., transformation, normalization) in our application. This decision is due to the variability of possible methods for these tasks. Users are expected to perform any necessary data pre-processing before uploading their data to TriplotGUI.\n\n\n\n1.1.2 More\nAfter uploading your data, a text will appear showing the number of rows and columns in your Omics data frame. Three buttons will also become available: Inspect variable class(es), remove variables(s), Force all variables to numeric.\n\nInspect variable class(es): Click this button to check if your variables are in the correct format. For example, you may want metabolite features in numeric rather than character format. After selecting variables and clicking OK, their classes will be displayed in the box.\nremove variable(s): Use this to remove variables from the uploaded data. Select variables to remove and click OK. The removed variables will be listed in the box and excluded from downstream analysis. This action is reversible - clicking the button again and selecting Cancel will restore all variables.\nForce all variables to numeric: This button converts all remaining variables to numeric format, which is necessary for PCA or WGCNA analysis on the Omics data.\n\nThese features may allow you to inspect, clean, and prepare your data for analysis without manually editing the original dataset.\n\n1.1.3 Reset all\nAt the right side of the Omics data upload section, there is a button labeled Reset all. Clicking this button will remove all your uploads and settings, returning the interface to its default state. This feature is convenient for starting a new analysis or restarting a workflow."
  },
  {
    "objectID": "workflow.html#auxiliary_data",
    "href": "workflow.html#auxiliary_data",
    "title": "Manual",
    "section": "\n1.2 Auxiliary data",
    "text": "1.2 Auxiliary data\nThe lightblue box is for uploading auxiliary data. The variables in this data can serve two purposes: (1) Customizing the color, size, and shape of scores in the visualizations in Step 1 (See section 1.4.2). (2) Providing pairing information (case-control match) for outcomes’ associations (See section 3.3.2).\n\n1.2.1 Basics\nThe requirements for the uploaded auxiliary data are the similar as those outlined in section 1.1.1.\n\nThe data must be in either csv, xlsx, rds, or rda format. If using rds format, it should be a dataframe. In the case of rda format, the rda object should contain only one dataframe.\nThe rows of data should represent observations, while the columns should represent variables (auxiliary variables).\nVariable names (column names) must not contain special characters such as ' ', '(', ')', ':', '/', '-', ',', or '@'.\nMissing values are allowed in the auxiliary data.\nAdditionally, the number and order of observations must be the same across all uploaded data.\n\n1.2.2 More\nAfter uploading the auxiliary data, a text will display the number of rows and columns in the auxiliary data frame. Three buttons will appear: Inspect variable class(es), remove variable(s), Change variable class.\n\nInspect variable class(es): Same functionality as described in section 1.1.2\nremove variable(s): Same functionality as described in section 1.1.2\nChange variable class: This button allows you to transform variables to either factor or numeric types. Select the variables to be transformed, click OK, and they will be converted to the chosen class for use in downstream analysis. This feature helps users easily transform variables to numeric and factor formats, corresponding to numeric and categorical variables."
  },
  {
    "objectID": "workflow.html#data-analysis-settings",
    "href": "workflow.html#data-analysis-settings",
    "title": "Manual",
    "section": "\n1.3 Data analysis settings",
    "text": "1.3 Data analysis settings\nThe red box is where you make choices for performing data analysis.\n\n1.3.1 Basics\n\n\nMethod: Choose between principal component analysis (PCA) or weighted correlation network analysis (WGCNA) for data reduction. Default is PCA.\n\n\n\n\n\n\n\nNote\n\n\n\nWGCNA separates Omics variables into clusters, performs PCA on each cluster, and extracts the first principal component of each cluster. These are called “modules” to distinguish from PCA components.\n\nThe clustering method used is the default hierarchical clustering method provided by cutreeDynamic() in the dynamicTreeCut package.\n\n\n\nPCA function: Select either prcomp or principal for PCA/WGCNA. Default is prcomp.\n\nMax number of components: (PCA only) Determines how many principal components to use in downstream analysis. Default is 5 or the number of Omics variables if less than 5.\nMinimum number for variables per module: (WGCNA only) Sets the minimum number of variables allowed in each WGCNA cluster. Default is 2.\n\nCenter: Choose whether to zero-center Omics variables before PCA/WGCNA. Default is Yes.\nScale: Choose whether to scale Omics variables to unit variance before PCA/WGCNA. Default is Yes.\n\n1.3.2 More\n\n\nRotation: This button appears when the PCA function is set to principal. It allows users to select how they want to transform principal components. For an explanation of rotation options, please refer to the documentation. In TriplotGUI, the default rotation setting is none."
  },
  {
    "objectID": "workflow.html#visualization-settings",
    "href": "workflow.html#visualization-settings",
    "title": "Manual",
    "section": "\n1.4 Visualization settings",
    "text": "1.4 Visualization settings\nThe orange box allows you to modify visualization outputs:\n\n1.4.1 Basics\n\n\nPlotting options: Four options are provided: (1) scores: The scores of principal components are plotted. (2) loadings: The loadings of principal components are plotted. (3) biplots: Both scores and loadings are scaled and plotted on the same graph. (4) screeplot: When the Method is selected as PCA, it shows how much variance each principal component contributes. When WGCNA is selected, it shows the variance contributed by each cluster and first principal component. By default, none of the four options are selected.\n\n\nComponent/module on first axis: This determines which component/module will be plotted on the x-axis. The default is 1 (the first one). Components are ordered from highest to lowest contribution to variance, while modules are ordered from clusters with the most to the least variables.\nComponent/module on second axis: This determines which component/module will be plotted on the y-axis. The default is 2 (the second one), with the same ordering criteria as for the first axis.\nType of loadings: Two options are provided: Eigenvectors and Eigenvectors × sqrt(eigenvalues). These calculations correspond to the output value referred to as “rotation” in the prcomp package and “loadings” in the principal package.\n\n\n1.4.2 More\n\nLoading labels: This option appears when you select loadings or biplot in Plotting options. It determines whether labels for loadings will be shown on the plot. The default is Yes.\nLoading Cut by: This option appears when you select loadings or biplot in Plotting options. It allows users to display only loadings above a certain absolute value (Absolute) or a percentage of the maximum loading (Proportion). The default is Proportion.\n\n\n\nAbsolute loading length: When Absolute is selected in Loading Cut by, a slider appears to let users decide which loadings above a specified value will be displayed on the plot.\n\n\nProportion of maximum loading: When selecting Proportion in Loading Cut by, a slider will show up to let user decide only loadings above how much percent of the maximum loading will show up on the plot.\nScore color by: After uploading Auxiliary data and selecting loadings or biplot in Plotting options, this button allows users to color score points based on one numeric or categorical variable from the auxiliary data. By default, no variables are selected.\nScore shape by: Similar to Score color by, this button allows users to change the shape of score points based on one categorical variable from the auxiliary data. By default, no variables are selected.\n\n\n\nScore size by: Similar to Score color by, this button allows users to change the sie of score points based on one numeric variable from the auxiliary data. By default, no variables are selected."
  },
  {
    "objectID": "workflow.html#visualizations",
    "href": "workflow.html#visualizations",
    "title": "Manual",
    "section": "\n1.5 Visualizations",
    "text": "1.5 Visualizations\nThe green box represents visualization outputs. With Omics data uploaded, selecting Plotting options in the visualization settings will display the corresponding plots here."
  },
  {
    "objectID": "workflow.html#exposure-data",
    "href": "workflow.html#exposure-data",
    "title": "Manual",
    "section": "\n2.1 Exposure data",
    "text": "2.1 Exposure data\n\n2.1.1 Basics\nThe dark blue box is for uploading exposure data. Requirements are the similar as in 1.1.1.\n\nThe data must be in either csv, xlsx, rds, or rda format. If using rds format, it should be a dataframe. In the case of rda format, the rda object should contain only one dataframe.\nThe rows of data should represent observations, while the columns should represent variables (exposures).\nVariable names (column names) must not contain special characters such as ' ', '(', ')', ':', '/', '-', ',', or '@'.\nMissing values are allowed in the exposure data. When missing values exists, by default, they are handled according to the ‘pairwise.complete.obs’ in the ‘cor()’ function in the cor package. The correlation or covariance between each pair of variables is computed using all complete pairs of observations on those variables. Please specify in the Missing values if you want to use other options.\nAdditionally, the number and order of observations must be the same across all uploaded data.\n\n2.1.2 More\nAfter uploading, a text shows row and column counts. Three buttons appear: Inspect variable class(es), remove variable(s), Change variable class.\n\nInspect variable class(es): Same functionality as described in section 1.1.2\nremove variable(s): Same functionality as described in section 1.1.2\nChange variable class: Same functionality as described in section 1.2.2"
  },
  {
    "objectID": "workflow.html#Covaraite_data1",
    "href": "workflow.html#Covaraite_data1",
    "title": "Manual",
    "section": "\n2.2 Covariate data",
    "text": "2.2 Covariate data\nThe light blue box for uploading covariate data, usable as confounders for partial correlations.\n\n2.2.1 Basics\nRequirements are the similar as in 1.1.1.\n\nThe data must be in either csv, xlsx, rds, or rda format. If using rds format, it should be a dataframe. In the case of rda format, the rda object should contain only one dataframe.\nThe rows of data should represent observations, while the columns should represent variables (covariates).\nVariable names (column names) must not contain special characters such as ' ', '(', ')', ':', '/', '-', ',', or '@'.\nMissing values are allowed in the covariate data. When missing values exists, observations that contain missing values in any of the variables used in a model will not be used.\nAdditionally, the number and order of observations must be the same across all uploaded data.\n\n2.2.2 More\nAfter uploading, a text shows row and column counts. The same three buttons appear: Inspect variable class(es), remove variable(s), Change variable class.\n\nInspect variable class(es): Same functionality as described in section 1.1.2\nremove variable(s): Same functionality as described in section 1.1.2\nChange variable class: Same functionality as described in section 1.2.2"
  },
  {
    "objectID": "workflow.html#data-analysis-settings-1",
    "href": "workflow.html#data-analysis-settings-1",
    "title": "Manual",
    "section": "\n2.3 Data analysis settings",
    "text": "2.3 Data analysis settings\nThe red box is for correlation analysis choices.\n\n2.3.1 Basics\n\nMethod: Three methods inherited from the cor package are supported for continuous exposures: Pearson, Spearman, Kendall. Please check cor package for more information. The default in TriplotGUI is Spearman.\nMissing values: The approaches for managing missing values inherited from the cor package are supported for continuous exposures. Please check cor package for more information. The default in TriplotGUI is everything.\n\nCategorical variables: Two options are provided: Perform one-hot-encoding and Use original. The default option is Use original.\nPerform one-hot-encoding: a categorical exposure variable with 2 classes is transformed to a binary variable with 0 and 1 values and then used as a numeric variable; A categorical exposure variable with n classes (n&gt;2) are transformed to n binary variables with 0 and 1 values.\nUse original: No transformation is made on the categorical variables. Linear models regressing components/modules on these variables are used for correlation analysis.\n\n\n\n2.3.2 More\n\n\nRaw or partial correlation: Upon uploading covariate data, this button will show up with two options: Raw and Adjusted. Raw: No covariates are used as confounders in the correlation analysis. Adjusted: Partial correlations are performed on all exposures-components/modules correlations while adjusting for any covariates that were not removed."
  },
  {
    "objectID": "workflow.html#visualizations-1",
    "href": "workflow.html#visualizations-1",
    "title": "Manual",
    "section": "\n2.4 Visualizations",
    "text": "2.4 Visualizations\nThe green box represents visualization outputs. With Omics data from Step 1 and exposure data uploaded, clicking the Refresh plot button will display the correlations between exposures and the two selected components/modules (selected from Step 1). The figure can be downloaded by clicking Download figure."
  },
  {
    "objectID": "workflow.html#outcome-data",
    "href": "workflow.html#outcome-data",
    "title": "Manual",
    "section": "\n3.1 Outcome data",
    "text": "3.1 Outcome data\n\n3.1.1 Basics\nThe dark blue box is for uploading outcome data. The requirements are the similar as in section 1.1.1.\n\nThe data must be in either csv, xlsx, rds, or rda format. If using rds format, it should be a dataframe. In the case of rda format, the rda object should contain only one dataframe.\nThe rows of data should represent observations, while the columns should represent variables (outcomes).\nVariable names (column names) must not contain special characters such as ' ', '(', ')', ':', '/', '-', ',', or '@'.\nMissing values are allowed in the outcome data. When missing values exists, observations that contain missing values in any of the variables used in a model will not be used.\nAdditionally, the number and order of observations must be the same across all uploaded data.\n\n3.1.2 More\nAfter uploading, a text displays the number of rows and columns in the outcome data frame. Three buttons appear: Inspect variable class(es), remove variable(s), Change variable class.\n\nInspect variable class(es): Same functionality as described in section 1.1.2\nremove variable(s): Same functionality as described in section 1.1.2\nChange variable class: Same functionality as described in section 1.2.2"
  },
  {
    "objectID": "workflow.html#Covaraite_data2",
    "href": "workflow.html#Covaraite_data2",
    "title": "Manual",
    "section": "\n3.2 Covariate data",
    "text": "3.2 Covariate data\nThe light blue box is for uploading covariate data. After removing redundant variables, the remaining data can be used as confounders for adjusting associations between outcomes and components/modules.\n\n3.2.1 Basics\nThe requirements for covariate data are the similar as in section 1.1.1.\n\nThe data must be in either csv, xlsx, rds, or rda format. If using rds format, it should be a dataframe. In the case of rda format, the rda object should contain only one dataframe.\nThe rows of data should represent observations, while the columns should represent variables (covariates).\nVariable names (column names) must not contain special characters such as ' ', '(', ')', ':', '/', '-', ',', or '@'.\nMissing values are allowed in the covariate data. When missing values exists, observations that contain missing values in any of the variables used in a model will not be used.\nAdditionally, the number and order of observations must be the same across all uploaded data.\n\n3.2.2 More\nAfter uploading, a text displays the number of rows and columns. The same three buttons appear: Inspect variable class(es), remove variable(s), Change variable class.\n\nInspect variable class(es): Same functionality as described in section 1.1.2\nremove variable(s): Same functionality as described in section 1.1.2\nChange variable class: Same functionality as described in section 1.2.2"
  },
  {
    "objectID": "workflow.html#data-analysis-settings-2",
    "href": "workflow.html#data-analysis-settings-2",
    "title": "Manual",
    "section": "\n3.3 Data analysis settings",
    "text": "3.3 Data analysis settings\nThe red box is for making choices in performing risk association analysis.\n\n\n\n\n\n\nNote\n\n\n\nFor outcomes - components/modules associations, statistical analyses are performed differently based on outcome classes and provided information. A table summarizes the methods and R packages used.\n\n\n\n\n3.3.1 Basics\n\n\nlog(risk): Users choose between beta coefficients or odds ratios for risk estimations. Options are Yes(useful for odds ratio) or No(useful for beta coefficient). Default is No(useful for beta coefficient).\n\n3.3.2 More\n\nConfounder adjustment: Appears after uploading covariate data. Users choose whether to adjust for covariates. Default is No.\nMultinomial Regression: Appears for categorical outcome variables with &gt;2 classes. Choosing No performs one-hot-encoding to transfrom these variables to n binary variables with 0 and 1 values; Yes performs multinomial regression. Default is No.\n\n\n\nPairing variable: Appears when auxiliary data (1.2.1) is uploaded. From auxiliary data, users can select a variable containing pairing information for modeling. For example, the matched case-control pair could constitute a categorical variable, where each pair of case and control is given a unique number. Upon selecting the variable, the information can be fed in the modelling of outcome - components/modules associations."
  },
  {
    "objectID": "workflow.html#visualization-settings-1",
    "href": "workflow.html#visualization-settings-1",
    "title": "Manual",
    "section": "\n3.4 Visualization settings",
    "text": "3.4 Visualization settings\nThe orange box is for modifying visualization outputs.\n\n3.4.1 Basics\n\nConfidence level: Sets the confidence level for risk estimate intervals. Default is 0.95.\nWhisker length: Sets the whisker length of confidence intervals. Default is 0.1."
  },
  {
    "objectID": "workflow.html#visualizations-2",
    "href": "workflow.html#visualizations-2",
    "title": "Manual",
    "section": "\n3.5 Visualizations",
    "text": "3.5 Visualizations\nThe green box represents visualization outputs. With Omics data from Step 1 and outcome data uploaded, clicking the Refresh plot button displays the risk associations between outcomes and two selected components/modules (chosen from Step 1). The resulting figure can be downloaded by clicking the Download figure button."
  },
  {
    "objectID": "workflow.html#visualization-settings-2",
    "href": "workflow.html#visualization-settings-2",
    "title": "Manual",
    "section": "\n4.1 Visualization settings",
    "text": "4.1 Visualization settings\nThe orange box represents visualization settings that allow you to customize the triplot output:\n\nComponent/module on first/second axis: This option lets you select which component or module will be plotted on the x-axis (first axis) and y-axis (second axis). The default settings are 1 for the first axis and 2 for the second. Components are ordered from the highest contribution to variance to the lowest, while modules are ordered based on the cluster size, from the most variables to the least.\nPlot loadings/correlations/risks: This setting determines whether loadings, correlations, and risk estimates will be included in the visualization. The default is set to Yes. If you select No, buttons relevant to plotting loadings, correlations, and risks will not appear.\nLoading/Correlation/Risk labels: This option controls whether labels for loadings, correlations, and risk estimates will be displayed in the visualization. The default is Yes for correlation and risk labels, while loading labels are set to No.\nLoading/Correlation/Risk limits: The limits of loadings, correlations and risk estimates on the visualization. The default is set as 1.1 times of the maximum absolute loading value, 1.1 times of the maximum absolute correlation coefficients, 1.1 times of the maximum absolute value for risk estimates’ confidence intervals.\nArrow tip length: The arrow tip length of loadings. The default is 0.02.\nLoading cut: Loadings below the value will not show up on the plot.\nPlot Scores: This option determines whether the scores will be plotted on the visualization. The default is No.\nWhisker length: Sets the whisker length of confidence intervals. Default is 0.1.\nlog(risk): Users choose between beta coefficients or odds ratios for risk estimations. Options are Yes(useful for odds ratio) or No(useful for beta coefficient). Default is No(useful for beta coefficient)."
  },
  {
    "objectID": "workflow.html#triplot",
    "href": "workflow.html#triplot",
    "title": "Manual",
    "section": "\n4.2 Triplot",
    "text": "4.2 Triplot\nThe green box represents visualization outputs. With Omics data from Step 1 and outcome data uploaded, clicking the Refresh plot button will co-visualize the exposure correlations and outcome associations with the selected components/modules. The figure can be downloaded by clicking Download figure."
  },
  {
    "objectID": "workflow.html#data-analysis-settings-3",
    "href": "workflow.html#data-analysis-settings-3",
    "title": "Manual",
    "section": "\n5.1 Data analysis settings",
    "text": "5.1 Data analysis settings\n\n5.1.1 Basics\n\nComponent/module on first/second axis: This option lets you select which component or module will be plotted on the x-axis (first axis) and y-axis (second axis). The default settings are 1 for the first axis and 2 for the second. Components are ordered from the highest contribution to variance to the lowest, while modules are ordered based on the cluster size, from the most variables to the least.\nType of mediation analysis: Two options are provided, Coventional and Counterfactual. By selecting Conventional, mediation analysis based on the approach originated by Baron and Kenny will be performed, utilizing the product method. In contrast, selecting Counterfactual mediation analysis employs a potential outcome framework provided by the mediation package. Here is a summary of these two methods in TriplotGUI:\n\n\n\n5.1.2 More\n\nExposure variables: This button appears when exposure data is uploaded in Step 2. Users can select which specific exposures they want to include in the mediation analysis.\nOutcome variables: This button appears when exposure data is uploaded in Step 3. Users can select which specific outcomes they want to include in the mediation analysis.\nTreatment/control: When the mediation method is not selected or is set to Counterfactual, empty fields for exposure variables will appear after exposure data is uploaded in step 2 and exposure variables for mediation analysis are selected. For each selected exposure variable, users need to specify two different values or classes to serve as the treatment and control contrast, respectively. For continuous exposures, this involves specifying two distinct numerical values. For categorical exposures, users must choose two different classes.\n\n\n\n\n\n\n\nNote\n\n\n\nWhen Counterfactual is chosen as the mediation method, it is essential that users specify all treatment and control contrast values before initiating the mediation analysis. These values must be distinct from each other.\nFor numeric exposure variables, the system displays the variable’s range, and users are advised to select treatment and control contrast values within this range. In the case of categorical exposure variables, the system indicates the number of levels present. Users are then limited to selecting from these existing levels when specifying treatment and control contrasts. This approach ensures that the mediation analysis is conducted using valid and appropriate contrast values, thereby enhancing the reliability of the results.\n\n\n\n5.1.3 Running mediation analysis\nClick when add new variables/ run with different methods:\nUnlike previous steps that automatically perform corresponding analyses upon data upload or setting changes, users must manually initiate the mediation analysis by clicking the Do mediation button. This step is necessary due to the potentially time-consuming nature of mediation analysis, which is performed on each combination of exposure, component/module, and outcome.\nBefore clicking the button, users should select the desired exposures and outcomes for the mediation analysis. If required, they should also specify the treatment and control contrasts for exposures. Upon clicking the Do mediation button, it will turn grey, indicating that the analysis is in progress. A progress bar will appear in the right bottom corner, serving as a reminder that the mediation analysis is still running.\nOnce the analysis is complete, the progress bar will disappear, and the button will revert to its original white color. This visual feedback helps users track the status of their mediation analysis and know when the results are ready for review.\n\n\n\n\n\n\nImportant\n\n\n\n\nBy selecting exposures, outcomes and specifying mediation method and then clicking Do mediation, the mediation analysis will be run and the results will be saved for the selected exposures, outcomes and mediation methods.\nVisualization will be based on what is selected in the Data analysis settings and set up in the Visualization settings. And the visualization will only show the results (using specific exposures, outcomes and mediation methods) that are generated and saved.\n\n\n\n\n\n\n\n\n\nSome notes for mediation analysis in TriplotGUI\n\n\n\n\nTriplotGUI memorizes what mediation analysis has been run (e.g. Using what exposure, what outcome, what method). This means that once you have run mediation analysis on certain exposures and outcomes using certain method, even if you unselect an exposure or outcome, their mediation results are not deleted. You can check this by reselecting the unselected exposure/outcome and click Do mediation. You may notice that the mediation analysis is finished rather fast since the result is already generated.\nYou can run Counterfactual and Conventional analysis alternatively on the same exposure-outcome pair. The result for different methods will be saved respectively.\nFor a Counterfactual mediation analysis, if you have used exposures-outcomes pairs to run mediation analysis, given specific treatment or control contrasts for exposures, once you use a different treatment or control contrasts for an exposure, all the mediation analysis connecting with that exposure will be rerun and the new results will replaces the corresponding old ones. The last-used treatment and control contrasts for running mediation analysis will be memorized and show up in the Treatment and Control.\n\nCounterfactual mediation analysis may take more time to run Conventional mediation analysis."
  },
  {
    "objectID": "workflow.html#simple_code_link",
    "href": "workflow.html#simple_code_link",
    "title": "Manual",
    "section": "\n5.2 Visualization settings",
    "text": "5.2 Visualization settings\n\nPlot mediations/loadings/correlations/risks: Users can choose whether to display mediations, loadings, correlations, and risk estimates on the visualization. The default is Yes for all. Selecting No for any element will hide related buttons.\nMediation/Loading/Correlation/Risk labels: Options to show labels for mediations, loadings, correlations, and risk estimates. The default is Yes for all.\nMediation/loading/correlation/risk limits Sets the visualization limits for mediations, loadings, correlations, and risk estimates. Defaults are 1.1 times the maximum absolute value for each element.\nWhisker length for mediations/risks: Sets the whisker length of confidence intervals. Default is 0.1.\nMediation proportion or estimate: Two options are provided: Proportion and Estimate. Selecting Proportion allows the visualization to display the proportion mediated, which indicates the impact of the indirect effect relative to the total effect. Choosing Estimate enables the visualization of mediation estimates, including both indirect and total effects. Default is Proportion.\nEstimate type: Upon selecting Estimate in Mediation proportion or estimate, this checkbox option will appear, providing two choices: IE (indirect effect) and TE (total effect). Users can choose to visualize either IE or TE individually, or both simultaneously on the mediation triplot.\n\nProportion type: Upon selecting Proportion in Mediation proportion or estimate, this checkbox option will appear, offering two choices PM(Proportion Mediated) and APM(Adjusted Proportion Mediated): \\[PM=\\frac{IE}{IE+DE}\\] \\[APM=\\frac{IE}{|IE|+|DE|}\\cdot\\frac{|IE+DE|}{IE+DE}=\\frac{IE}{IE+DE}\\cdot\\frac{|IE+DE|}{|IE|+|DE|}\\]\nPM represents the conventional method of calculating proportion mediated. However, it doesn’t account for scenarios where direct and indirect effects have opposite directions, potentially resulting in a proportion mediated exceeding 1.\nAPM introduces a novel approach to calculate adjusted proportion mediated. It uses the absolute values of direct and indirect effects to determine the total effect, constraining the adjusted proportion mediated between 0 and 1. APM highlights the proportion of influence the indirect effect has within the range of all effects, while considering the directionality of indirect and total effects.\nUsers can choose to visualize either PM or APM, or both, on the mediation triplot\n\nArrow tip length: The arrow tip length of loadings. The default is 0.02.\nLoading cut: Loadings below the value will not show up on the plot.\nWhisker length for mediations/risks: Sets the whisker length of confidence intervals. Default is 0.1.\nlog(risk): Users can choose whether to present their risk estimates as beta coefficients or odds ratios. Two options are provided: Yes and No. Selecting Yes will use odds ratios, while selecting No will use beta coefficients. The default is No, meaning beta coefficients are displayed by default."
  },
  {
    "objectID": "workflow.html#triplot-with-mediation",
    "href": "workflow.html#triplot-with-mediation",
    "title": "Manual",
    "section": "\n5.3 Triplot with mediation",
    "text": "5.3 Triplot with mediation\nThe green box displays visualization outputs. After uploading Omics data (step 1), exposure and outcome data (step 2-3), and performing mediation analysis, clicking the Refresh plot button will co-visualize loadings, selected exposures’ correlations, selected outcomes’ risk associations, and mediation analysis results. Users can download the figure by clicking Download mediation triplot."
  },
  {
    "objectID": "workflow.html#mediation-barplots",
    "href": "workflow.html#mediation-barplots",
    "title": "Manual",
    "section": "\n5.4 Mediation barplots",
    "text": "5.4 Mediation barplots\nWe also offer mediation barplots in Step 5B, which focus on visualizing the magnitude and direction of single mediation estimates through barplots. These plots use one exposure, one mediator (component/module), and one outcome. The barplot visualizations for conventional and counterfactual mediation analyses are presented separately, allowing for clear comparison between the two methods.\n\n\n5.4.1 Visualization settings\nThe orange box represents visualization settings for conventional and counterfactual mediation, respectively. After running mediation analyses, Exposure/Mediator/Outcome variables involved in the analyses appear in the options for visualization settings. Users can select one exposure, one mediator, and one outcome to create the barplot.\n\n5.4.2 Mediation barplot\nThe green box displays visualization outputs for conventional and counterfactual mediation, respectively. Clicking the Refresh plot button generates the mediation barplot for the selected exposure, mediator, and outcome. Users can download the figure by clicking Download conventional/counterfactual mediation barplot."
  },
  {
    "objectID": "workflow.html#visualization-settings-4",
    "href": "workflow.html#visualization-settings-4",
    "title": "Manual",
    "section": "\n6.1 Visualization settings",
    "text": "6.1 Visualization settings\nThe orange box contains visualization settings.\n\n\nComponent(s)/module(s) to remove: All selected components/modules from Step 1 appear as rows in the heatmap. Users can choose which components/modules they want to exclude from the heatmap visualizations.\nShow correlation coefficients/risk estimates/mediation results: Users can determine what to display in the heatmap, with the default setting being Yes for all options.\nCorrelation(s)/Risk(s) to remove: All selected exposures and outcomes from Step 2-3 appear as columns in the heatmap. Users can choose which exposures and outcomes to remove from the heatmap visualizations in this section.\nMediation result type: For the mediation results in the heatmap, users can select which specific results to display. Options include indirect effect, total effect, and two types of proportion mediated."
  },
  {
    "objectID": "workflow.html#visualizations-3",
    "href": "workflow.html#visualizations-3",
    "title": "Manual",
    "section": "\n6.2 Visualizations",
    "text": "6.2 Visualizations\nThe green box displays visualization outputs. Clicking the Refresh plot button generates heatmaps showing correlations (between selected exposures and components/modules), risk estimates (between selected outcomes and components/modules), and mediation results (based on selected exposures, outcomes, components/modules, and completed mediation analysis from Step 5). Users can download the resulting figure by clicking the Download figure button."
  },
  {
    "objectID": "workflow.html#download-processed-data",
    "href": "workflow.html#download-processed-data",
    "title": "Manual",
    "section": "\n7.1 Download processed data",
    "text": "7.1 Download processed data\nIn the darkblue box, users can download processed data in CSV format. The processed data of Omics, exposures and outcomes (i.e., data after possible variable removal and class changes mentioned in sections 1.1.2 and 1.2.2) can be viewed and downloaded here.\n\nProcessed Omics/exposure/outcome data: The processed version of Omics/exposure/outcome data can be viewed and downloaded.\nProcessed auxiliary/covariate data: If any covariate data or auxiliary data were used, the processed version can be similarly viewed and downloaded here.\nExposure/Outcome/Mediator variables for mediation: Separately, the selected exposures, outcomes and components/modules used as mediator variables in the mediation analysis from step 5 can be viewed and downloaded."
  },
  {
    "objectID": "workflow.html#download-exposure-correlations-outcome-associations-and-mediation-results",
    "href": "workflow.html#download-exposure-correlations-outcome-associations-and-mediation-results",
    "title": "Manual",
    "section": "\n7.2 Download exposure correlations, outcome associations and mediation results",
    "text": "7.2 Download exposure correlations, outcome associations and mediation results\nFrom the lightblue box, results from correlations, associations and mediation can be viewed and download. These include:\n\n\nCorrelation matrix: These are correlation coefficients between exposures and components/modules generated from step 2.\np values of correlations: These are p values of correlations between exposures and components/modules generated from step 2.\n\n\nRisk estimates: These are beta coefficients representing the outcome-components/modules associations generated from step 3. Users can calculate odds ratios by taking the exponential of these values if needed.\np values of risks: These are p values of risk estimates between outcomes and components/modules generated from step 3.\n\n\nmediation estimates: These are the indirect effect, total effect, proportion mediated, and adjusted proportion mediated for each combination of exposure, component/module as mediator, and outcome, generated from step 5.\np values of mediation estimates: These are the corresponding p-values for the indirect effect, total effect, proportion mediated, and adjusted proportion mediated."
  },
  {
    "objectID": "workflow.html#tpobject",
    "href": "workflow.html#tpobject",
    "title": "Manual",
    "section": "\n7.3 TPObject",
    "text": "7.3 TPObject\nIn the red box, users can download the TPObject in RDA format as the end product. The TPObject is a list structure used to save information and pass it through the various steps of the analysis in TriplotGUI.\n\n\n\n\n\n\nNote\n\n\n\nIf you are interested in learning more about the contents of the TPObject at each step of the analysis in TriplotGUI, we recommend exploring Tutorial(simple) and Tutorial(complex)."
  },
  {
    "objectID": "workflow.html#show-data",
    "href": "workflow.html#show-data",
    "title": "Manual",
    "section": "\n7.4 Show data",
    "text": "7.4 Show data\nIn the green box,users can view the processed data and generated results. By clicking the View button, the corresponding data will be displayed in this section."
  },
  {
    "objectID": "simple_code.html",
    "href": "simple_code.html",
    "title": "Tutorial(simple) - Code",
    "section": "",
    "text": "The code at this page can be downloaded here\nBefore starting, please ensure you have installed the TriplotGUI package following the Setup instructions."
  },
  {
    "objectID": "simple_code.html#check-camp_2",
    "href": "simple_code.html#check-camp_2",
    "title": "Tutorial(simple) - Code",
    "section": "\n3.1 Check CAMP_2",
    "text": "3.1 Check CAMP_2\nCheck the CAMP_2 list:\n\nShow the codeclass(CAMP_2)\n\n[1] \"list\"\n\nShow the codenames(CAMP_2)\n\n[1] \"FoodData\"       \"MetaboliteData\" \"ClinData\""
  },
  {
    "objectID": "simple_code.html#check-datasets",
    "href": "simple_code.html#check-datasets",
    "title": "Tutorial(simple) - Code",
    "section": "\n3.2 Check datasets",
    "text": "3.2 Check datasets\nCheck the names of variables in each data:\n\nShow the codecolnames(CAMP_2$ClinData)\n\n [1] \"AGE\"               \"SEX\"               \"BMI\"              \n [4] \"triglycerides\"     \"total_cholesterol\" \"HDL\"              \n [7] \"LDL\"               \"GGT\"               \"ALT\"              \n[10] \"AST\"               \"creatinine\"        \"Urea_nitrogen\"    \n[13] \"Uric_acid\"         \"Fasting_glucose\"  \n\nShow the codecolnames(CAMP_2$MetaboliteData)\n\n [1] \"PC_P_20_0_22_6_\"                                                                \n [2] \"X1__3_4_Dihydroxyphenyl__7__4_hydroxy_3_methoxyphenyl__1_6_heptadiene_3_5_dione\"\n [3] \"Unknown_675.6485_9.35\"                                                          \n [4] \"Unknown_1066.9034_10.16\"                                                        \n [5] \"PC_42_8_\"                                                                       \n [6] \"Unknown_931.7610_9.68\"                                                          \n [7] \"TG_52_0_\"                                                                       \n [8] \"CE_22_4_\"                                                                       \n [9] \"Neutral_glycosphingolipids1023.67\"                                              \n[10] \"TG_58_10_\"                                                                      \n[11] \"Neutral_glycosphingolipids971.72\"                                               \n[12] \"Unknown_914.7433_10.06\"                                                         \n[13] \"Cucurbic_acid\"                                                                  \n[14] \"DG_16_0_18_2_\"                                                                  \n[15] \"Indoleacrylic_acid\"                                                             \n[16] \"PC_O_20_0_22_6_\"                                                                \n[17] \"Unknown_948.6589_8.51\"                                                          \n[18] \"Unknown_858.5318_5.49\"                                                          \n[19] \"O_propanoyl_carnitine\"                                                          \n[20] \"DG_38_5_\"                                                                       \n\nShow the codecolnames(CAMP_2$FoodData)\n\n [1] \"Refined_grains\" \"Coarse_grains\"  \"Red_meat\"       \"Poutry\"        \n [5] \"Seafood\"        \"Egg\"            \"Animal_organs\"  \"Vegetables\"    \n [9] \"Fruits\"         \"Potatos\"        \"Legumes\""
  },
  {
    "objectID": "simple_code.html#check-variables-class",
    "href": "simple_code.html#check-variables-class",
    "title": "Tutorial(simple) - Code",
    "section": "\n3.3 Check variables’ class",
    "text": "3.3 Check variables’ class\nWe then transform the data to dataframe format and use TriplotGUI’s checkdata() function to examine the classes of variables.\n\nShow the codeClinData&lt;-as.data.frame(CAMP_2$ClinData)\nMetaboliteData&lt;-as.data.frame(CAMP_2$MetaboliteData)\nFoodData&lt;-as.data.frame(CAMP_2$FoodData)\n\nClinData_check&lt;-checkdata(ClinData)\nMetaboliteData_check&lt;-checkdata(MetaboliteData)\nFoodData_check&lt;-checkdata(FoodData)\n\n\n\nShow the codeClinData_check$class_summary_statistics\n\n$check_class_vector\n              AGE               SEX               BMI     triglycerides \n        \"numeric\"          \"factor\"         \"numeric\"         \"numeric\" \ntotal_cholesterol               HDL               LDL               GGT \n        \"numeric\"         \"numeric\"         \"numeric\"         \"numeric\" \n              ALT               AST        creatinine     Urea_nitrogen \n        \"numeric\"         \"numeric\"         \"numeric\"         \"numeric\" \n        Uric_acid   Fasting_glucose \n        \"numeric\"         \"numeric\" \n\n$check_class_table\ncheck_class_vector\n factor numeric \n      1      13 \n\nShow the codeMetaboliteData_check$class_summary_statistics\n\n$check_class_vector\n                                                                PC_P_20_0_22_6_ \n                                                                      \"numeric\" \nX1__3_4_Dihydroxyphenyl__7__4_hydroxy_3_methoxyphenyl__1_6_heptadiene_3_5_dione \n                                                                      \"numeric\" \n                                                          Unknown_675.6485_9.35 \n                                                                      \"numeric\" \n                                                        Unknown_1066.9034_10.16 \n                                                                      \"numeric\" \n                                                                       PC_42_8_ \n                                                                      \"numeric\" \n                                                          Unknown_931.7610_9.68 \n                                                                      \"numeric\" \n                                                                       TG_52_0_ \n                                                                      \"numeric\" \n                                                                       CE_22_4_ \n                                                                      \"numeric\" \n                                              Neutral_glycosphingolipids1023.67 \n                                                                      \"numeric\" \n                                                                      TG_58_10_ \n                                                                      \"numeric\" \n                                               Neutral_glycosphingolipids971.72 \n                                                                      \"numeric\" \n                                                         Unknown_914.7433_10.06 \n                                                                      \"numeric\" \n                                                                  Cucurbic_acid \n                                                                      \"numeric\" \n                                                                  DG_16_0_18_2_ \n                                                                      \"numeric\" \n                                                             Indoleacrylic_acid \n                                                                      \"numeric\" \n                                                                PC_O_20_0_22_6_ \n                                                                      \"numeric\" \n                                                          Unknown_948.6589_8.51 \n                                                                      \"numeric\" \n                                                          Unknown_858.5318_5.49 \n                                                                      \"numeric\" \n                                                          O_propanoyl_carnitine \n                                                                      \"numeric\" \n                                                                       DG_38_5_ \n                                                                      \"numeric\" \n\n$check_class_table\ncheck_class_vector\nnumeric \n     20 \n\nShow the codeFoodData_check$class_summary_statistics\n\n$check_class_vector\nRefined_grains  Coarse_grains       Red_meat         Poutry        Seafood \n     \"numeric\"      \"numeric\"      \"numeric\"      \"numeric\"      \"numeric\" \n           Egg  Animal_organs     Vegetables         Fruits        Potatos \n     \"numeric\"      \"numeric\"      \"numeric\"      \"numeric\"      \"numeric\" \n       Legumes \n     \"numeric\" \n\n$check_class_table\ncheck_class_vector\nnumeric \n     11"
  },
  {
    "objectID": "simple_code.html#check-sanities-for-variables",
    "href": "simple_code.html#check-sanities-for-variables",
    "title": "Tutorial(simple) - Code",
    "section": "\n3.4 Check sanities for variables",
    "text": "3.4 Check sanities for variables\nTo check for missing (NA) or abnormal values (e.g., NaN, negative values, infinite values, blank values) in each variable, you can use the checkdata() function. This function generates a summary table for each data frame, showing the number of observations containing NA, NaN, zero, negative, infinite (Inf), and blank values, along with their percentages.\n\nShow the codeif (!require(kableExtra)) {\n  install.packages(\"kableExtra\")  # Install the package if it's not available.\n\n}\nlibrary(kableExtra)             # Load it after installation.'\n\n\n\nShow the codekable(ClinData_check$everycolumn)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAGE\nSEX\nBMI\ntriglycerides\ntotal_cholesterol\nHDL\nLDL\nGGT\nALT\nAST\ncreatinine\nUrea_nitrogen\nUric_acid\nFasting_glucose\n\n\n\nNA_number\n0\n0\n0\n0.0000000\n0\n0\n0\n0.0000000\n0.0000000\n0\n0\n0\n0\n0\n\n\nNA_percentage\n0\n0\n0\n0.0000000\n0\n0\n0\n0.0000000\n0.0000000\n0\n0\n0\n0\n0\n\n\nNaN_number\n0\n0\n0\n0.0000000\n0\n0\n0\n0.0000000\n0.0000000\n0\n0\n0\n0\n0\n\n\nNaN_percentage\n0\n0\n0\n0.0000000\n0\n0\n0\n0.0000000\n0.0000000\n0\n0\n0\n0\n0\n\n\nnegative_number\n0\n0\n0\n0.0000000\n0\n0\n0\n0.0000000\n0.0000000\n0\n0\n0\n0\n0\n\n\nnegative_percentage\n0\n0\n0\n0.0000000\n0\n0\n0\n0.0000000\n0.0000000\n0\n0\n0\n0\n0\n\n\nzero_number\n0\n0\n0\n4.0000000\n0\n0\n0\n14.0000000\n65.0000000\n0\n0\n0\n0\n0\n\n\nzero_percentage\n0\n0\n0\n0.0133333\n0\n0\n0\n0.0466667\n0.2166667\n0\n0\n0\n0\n0\n\n\ninf_number\n0\n0\n0\n0.0000000\n0\n0\n0\n0.0000000\n0.0000000\n0\n0\n0\n0\n0\n\n\ninf_percentage\n0\n0\n0\n0.0000000\n0\n0\n0\n0.0000000\n0.0000000\n0\n0\n0\n0\n0\n\n\nblank_number\n0\n0\n0\n0.0000000\n0\n0\n0\n0.0000000\n0.0000000\n0\n0\n0\n0\n0\n\n\nblank_percentage\n0\n0\n0\n0.0000000\n0\n0\n0\n0.0000000\n0.0000000\n0\n0\n0\n0\n0\n\n\n\n\nShow the codekable(MetaboliteData_check$everycolumn)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPC_P_20_0_22_6_\nX1__3_4_Dihydroxyphenyl__7__4_hydroxy_3_methoxyphenyl__1_6_heptadiene_3_5_dione\nUnknown_675.6485_9.35\nUnknown_1066.9034_10.16\nPC_42_8_\nUnknown_931.7610_9.68\nTG_52_0_\nCE_22_4_\nNeutral_glycosphingolipids1023.67\nTG_58_10_\nNeutral_glycosphingolipids971.72\nUnknown_914.7433_10.06\nCucurbic_acid\nDG_16_0_18_2_\nIndoleacrylic_acid\nPC_O_20_0_22_6_\nUnknown_948.6589_8.51\nUnknown_858.5318_5.49\nO_propanoyl_carnitine\nDG_38_5_\n\n\n\nNA_number\n0\n0\n0\n0\n0\n0.0000000\n0\n0.0000000\n0\n0.0000000\n0\n0\n0\n0.0000000\n0\n0\n0\n0\n0\n0\n\n\nNA_percentage\n0\n0\n0\n0\n0\n0.0000000\n0\n0.0000000\n0\n0.0000000\n0\n0\n0\n0.0000000\n0\n0\n0\n0\n0\n0\n\n\nNaN_number\n0\n0\n0\n0\n0\n0.0000000\n0\n0.0000000\n0\n0.0000000\n0\n0\n0\n0.0000000\n0\n0\n0\n0\n0\n0\n\n\nNaN_percentage\n0\n0\n0\n0\n0\n0.0000000\n0\n0.0000000\n0\n0.0000000\n0\n0\n0\n0.0000000\n0\n0\n0\n0\n0\n0\n\n\nnegative_number\n0\n0\n0\n0\n0\n0.0000000\n0\n0.0000000\n0\n0.0000000\n0\n0\n0\n0.0000000\n0\n0\n0\n0\n0\n0\n\n\nnegative_percentage\n0\n0\n0\n0\n0\n0.0000000\n0\n0.0000000\n0\n0.0000000\n0\n0\n0\n0.0000000\n0\n0\n0\n0\n0\n0\n\n\nzero_number\n0\n0\n0\n0\n0\n7.0000000\n0\n16.0000000\n0\n8.0000000\n0\n0\n0\n1.0000000\n0\n0\n0\n0\n0\n0\n\n\nzero_percentage\n0\n0\n0\n0\n0\n0.0233333\n0\n0.0533333\n0\n0.0266667\n0\n0\n0\n0.0033333\n0\n0\n0\n0\n0\n0\n\n\ninf_number\n0\n0\n0\n0\n0\n0.0000000\n0\n0.0000000\n0\n0.0000000\n0\n0\n0\n0.0000000\n0\n0\n0\n0\n0\n0\n\n\ninf_percentage\n0\n0\n0\n0\n0\n0.0000000\n0\n0.0000000\n0\n0.0000000\n0\n0\n0\n0.0000000\n0\n0\n0\n0\n0\n0\n\n\nblank_number\n0\n0\n0\n0\n0\n0.0000000\n0\n0.0000000\n0\n0.0000000\n0\n0\n0\n0.0000000\n0\n0\n0\n0\n0\n0\n\n\nblank_percentage\n0\n0\n0\n0\n0\n0.0000000\n0\n0.0000000\n0\n0.0000000\n0\n0\n0\n0.0000000\n0\n0\n0\n0\n0\n0\n\n\n\n\nShow the codekable(FoodData_check$everycolumn)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRefined_grains\nCoarse_grains\nRed_meat\nPoutry\nSeafood\nEgg\nAnimal_organs\nVegetables\nFruits\nPotatos\nLegumes\n\n\n\nNA_number\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.00\n0.0000000\n0.0000000\n0.0000000\n\n\nNA_percentage\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.00\n0.0000000\n0.0000000\n0.0000000\n\n\nNaN_number\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.00\n0.0000000\n0.0000000\n0.0000000\n\n\nNaN_percentage\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.00\n0.0000000\n0.0000000\n0.0000000\n\n\nnegative_number\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.00\n0.0000000\n0.0000000\n0.0000000\n\n\nnegative_percentage\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.00\n0.0000000\n0.0000000\n0.0000000\n\n\nzero_number\n65.0000000\n110.0000000\n101.0000000\n85.0000000\n103.0000000\n100.0000000\n116.0000000\n57.00\n56.0000000\n67.0000000\n79.0000000\n\n\nzero_percentage\n0.2166667\n0.3666667\n0.3366667\n0.2833333\n0.3433333\n0.3333333\n0.3866667\n0.19\n0.1866667\n0.2233333\n0.2633333\n\n\ninf_number\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.00\n0.0000000\n0.0000000\n0.0000000\n\n\ninf_percentage\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.00\n0.0000000\n0.0000000\n0.0000000\n\n\nblank_number\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.00\n0.0000000\n0.0000000\n0.0000000\n\n\nblank_percentage\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.0000000\n0.00\n0.0000000\n0.0000000\n0.0000000\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nYou shall only continue to use the data when the class of variables are correct and the missing or abnormal values in the variable are properly handled."
  },
  {
    "objectID": "simple_code.html#build-data-for-analysis",
    "href": "simple_code.html#build-data-for-analysis",
    "title": "Tutorial(simple) - Code",
    "section": "\n3.5 Build data for analysis",
    "text": "3.5 Build data for analysis\nWe treat food variables as our exposures and BMI, triglycerides, total_cholesterol, HDL and LDL as outcomes. We want to explore their relationships through the metabolomics data, using metabolites as assumed mediators. Sex and age are used as potential confounders for exposure-mediator and mediator-outcome association.\n\nShow the codeexposure1 &lt;- FoodData\nOmics1 &lt;- MetaboliteData\noutcome1 &lt;- ClinData[, c(\"BMI\", \"triglycerides\", \"total_cholesterol\", \"HDL\", \"LDL\")]\ncovariates1 &lt;- ClinData[, c(\"SEX\" , \"AGE\")]"
  },
  {
    "objectID": "simple_code.html#simple_link",
    "href": "simple_code.html#simple_link",
    "title": "Tutorial(simple) - Code",
    "section": "\n4.1 Step 1: PCA/WGCNA plots",
    "text": "4.1 Step 1: PCA/WGCNA plots\nUsing TriplotGUI package, first we perform dimension reduction, i.e. principal component analysis (PCA) on metabolomics variables.\n\nShow the codereduced_Omics1 &lt;- OmicsReduction(dataframe = Omics1,\n                                   pcNum = 5,\n                                   option = \"PCA\",\n                                   loadingsName = TRUE)\n\n\nYou can view scree plot, score plot, loading plot and biplot at this stage.\n\nShow the codereduced_Omics1$scree_plot\n\nplot\n\n\n\n\n\n\nShow the codereduced_Omics1$score_plot\n\nplot\n\n\n\n\n\n\nShow the codereduced_Omics1$loading_plot\n\nplot\n\n\n\n\n\n\nShow the codereduced_Omics1$scoreloading_plot\n\nplot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nSometimes the following text will show up in your console and the figure cannot be directly run:\nlibpng warning: Image width is zero in IHDR\nlibpng error: Invalid IHDR data\nWarning message:\nIn dev.off(which) : agg could not write to the given file\\\nRun gc() in your console to clear the memory. Then rerun the code again to view the figure.\n\n\nWe then build a TPObject based on the data reduction results. This object will be used to save information and facilitate the transfer of data through the various steps in TriplotGUI.\n\nShow the codescores &lt;- reduced_Omics1$object$scores\nloadings &lt;- reduced_Omics1$object$loadings\nvariance &lt;- reduced_Omics1$object$variance\nTPObject1 &lt;- makeTPO(scores = scores,\n                     loadings = loadings,\n                     variance = variance)\n\n\nMaking TriPlotObject (TPO)\n--------------------------\nLoading matrix has 20 variables and 20 components.\n\nScore matrix has 300 observations and 20 components.\n\nTPO has 0 attached correlations.\nTPO has 0 attached risks."
  },
  {
    "objectID": "simple_code.html#step-2-3-exposure-correlations-outcome-associations",
    "href": "simple_code.html#step-2-3-exposure-correlations-outcome-associations",
    "title": "Tutorial(simple) - Code",
    "section": "\n4.2 Step 2-3: Exposure correlations & Outcome associations",
    "text": "4.2 Step 2-3: Exposure correlations & Outcome associations\nThe correlations between principal components (PCs) and food items are calculated using Pearson correlations, adjusting for confounders. We investigate associations between PC scores and risk markers adjusting for confounders using linear regression, as all food variables are numeric.\nThe PC scores are saved in the TPObject, which can be directly used in the exposureAssociation() function to calculate correlation coefficients and p-values with exposures (food variables), while adjusting for confounders.\n\nShow the codeCorrelations_object &lt;- exposureAssociation(TPObject = TPObject1,\n                                exposure = exposure1,\n                                confounder = covariates1,\n                                method = \"pearson\")\n\n\nThe correlation results are then added to the TPObject.\n\nShow the codeTPObject2 &lt;- addExposure(TPObject = TPObject1,\n                     corrEstimate = Correlations_object$cor_estimate,\n                     corrPvalue = Correlations_object$cor_pvalue)\n\n\nAdding correlation to TPO\n-------------------------\n\nTPO has 11 attached correlations.\nTPO has 0 attached risks.\n\n\nSimilarly, we calculate risk estimates (beta coefficients from linear regression) and p-values using the PC scores saved in the TPObject and the outcome variables. This is done using the outcomeAssociation() function, which also adjusts for confounders.\n\nShow the codeRisks_object &lt;- outcomeAssociation(TPObject = TPObject2,\n                               outcome = outcome1,\n                               confounder = covariates1)\n\n\nThe risk estimate results are then added to the TPObject.\n\nShow the codeTPObject3 &lt;- addOutcome(TPObject = TPObject2, \n                     Risk = Risks_object)\n\n\nAdding risk to TPO\n------------------\n\nTPO has 11 attached correlations.\nTPO has 5 attached risks."
  },
  {
    "objectID": "simple_code.html#step-4-visualization-of-triplot",
    "href": "simple_code.html#step-4-visualization-of-triplot",
    "title": "Tutorial(simple) - Code",
    "section": "\n4.3 Step 4: Visualization of Triplot",
    "text": "4.3 Step 4: Visualization of Triplot\nThen we generate the Triplot. It’s important to note that a Triplot can be generated from any TPObject.\n\nShow the codeTPO_plots3 &lt;- TriplotGUI(TPObject3, \n                              riskOR = FALSE) #risks is shown as coeffcients, not odds ratio\n\n\nPlot the triplot\n\nShow the codeTPO_plots3$triplot\n\nplot\n\n\n\n\n\n\n\n\nIn the triplot, black arrows represent loadings of Omics variables, forming patterns in different components (axes). Blue circle points show exposure correlations with the components, while red square points indicate outcome associations with the components.\nFor interpretation, let’s focus on Principal Component 1 (PC1) and Principal Component 2 (PC2), using the exposures \"Refined grains\", \"Red meat\", and the outcome \"BMI\" as examples:\nPC1: This component shows a positive association with BMI and is correlated with high intakes of red meat and refined grains, even after adjusting for age and sex. This suggests that the metabolite features dominating PC1 may provide valuable insights into how the intake of red meat and refined grains could influence BMI.\nPC2: In contrast, PC2 exhibits a smaller association with BMI and a weak inverse correlation with red meat and refined grains. The metabolite features contributing significantly to PC2 may indicate a marginal beneficial effect of these dietary components, although this effect appears to be limited. This may also suggest that the features dominating PC2 may reflect metabolite patterns influenced by food, but not to a large degree associations with metabolic regulation in relation to health.\nThis interpretation highlights how different dietary exposures relate to metabolic outcomes, offering insights into potential mechanisms at play."
  },
  {
    "objectID": "simple_code.html#step-5-triplot-with-mediation",
    "href": "simple_code.html#step-5-triplot-with-mediation",
    "title": "Tutorial(simple) - Code",
    "section": "\n4.4 Step 5: Triplot with mediation",
    "text": "4.4 Step 5: Triplot with mediation\nMediation analysis will be performed using the conventional “product” method on our selected exposures (\"Refined grains\", \"Red meat\"), mediators (PC1 and PC2), and the outcome of interest (\"BMI\"), adjusting for age and sex in both the exposure-mediator and mediator-outcome relationships.\n\nShow the codemediation_object3 &lt;- \n  getMediationConventional (mediator = TPObject3$scores[,c(1:2),drop = FALSE], \n                             # Specfiying at least 2 components so that there can be a 2-dimensional plot\n                             exposure = exposure1[,c(\"Refined_grains\",\"Red_meat\"),drop = FALSE],\n                             outcome = outcome1[,\"BMI\",drop = FALSE],\n                             confounderME = covariates1,\n                             confounderOE = covariates1)\n\n\nExamine the barplot for a clearer view of the direct, indirect, and total effects for each combination of PC, exposure, and outcome.\n\nShow the codemediation_plots3 &lt;- mediationBarplot(mediationObject = mediation_object3,\n                                         cex = 2,\n                                         # size of the text\n                                         by_row = \"one_column\")\n\n\n\nShow the codemediation_plots3\n\nplot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe barplot displays direct, indirect, and total effects for each exposure-mediator-outcome combination, providing a convenient tool to assess the direction and magnitude of mediation estimates.\n\nColor coding indicates significance and direction: red represents significant positive effects (p&lt;0.05), blue represents significant negative effects (p&lt;0.05), and grey represents insignificant effects.\nSignificance levels are denoted by stars: one star for p&lt;0.05, two stars for p&lt;0.01, and three stars for p&lt;0.001.\n\n\n\nThe mediation results are then added to the TPObject.\n\nShow the codeTPObject4 &lt;- addMediation(TPObject = TPObject3, \n                           mediationObject = mediation_object3)\n\n\nAdding mediation to TPO\n-------------------------\n\nTPO mediation has used 2 mediators, 2 exposures, 1 outcomes\nMediators are PC1, PC2 \nExposures are Refined_grains, Red_meat \nOutcomes are BMI\n\n\nMake the triplot with mediation.\n\nShow the codeTPO_plots4 &lt;- mediationTriplot(TPObject4,\n                                     show = c(\"IE\",\"TE\")\n                                     )\n\n\nShow the mediation estimates only (indirect and total effect).\n\nShow the codeTPO_plots4$mediations_plot\n\nplot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn the triplot, indirect effects, which are specific to each mediator (such as PC1 or PC2), are depicted as dark green triangle points. Total effects, on the other hand, are shown as circles. It’s important to note that while indirect effects are tied to particular mediators, total effects remain constant for specific exposure-outcome pairs.\n\n\nPlot the triplot with mediation.\n\nShow the codeTPO_plots4$mediations_triplot\n\nplot\n\n\n\n\n\n\n\n\nBased on the barplot and the triplot with mediation, we observed significant mediation effects through PC1 for the red_meat-BMI and refined_grain-BMI associations. This finding suggests that the metabolite features contributing to PC1 are likely mediating the pathway from red meat and refined grain intake to BMI changes. These results provide insight into potential metabolic mechanisms linking dietary patterns to body mass index."
  },
  {
    "objectID": "simple_code.html#comparative-visualization",
    "href": "simple_code.html#comparative-visualization",
    "title": "Tutorial(simple) - Code",
    "section": "\n4.5 Comparative Visualization",
    "text": "4.5 Comparative Visualization\nUsers can easily visualize the correlations, risk estimations, and mediation results stored in the TPObject using the checkTPO() function provided by TriplotGUI. This function generates heatmaps for each type of analysis, offering a comprehensive and intuitive way to examine the relationships between variables. Note that you could put any TPObjects generate along the steps for heatmap visualizations.\n\nShow the codecheckTPObject4 &lt;- checkTPO(TPObject4,\n                                  size=7    ## customize the size of stars\n                                  )\n\n\nShow heatmap for correlation coefficients and p values between PCs and exposures:\n\nShow the codecheckTPObject4$corr_coefficients\n\nplot\n\n\n\n\n\n\n\n\nShow heatmap for risk estimates (beta coefficients) and p values between PCs and outcomes:\n\nShow the codecheckTPObject4$risk_coefficients\n\nplot\n\n\n\n\n\n\n\n\nShow heatmap for mediation estimates and p values for indirect effect(IE), and total effect(TE), proportion mediated (PM) and adjusted proportion mediated (APM): See Manual section for more details:\n\nShow the codecheckTPObject4$med_coefficients\n\nplot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nSignificance is indicated as follows. One star for p&lt;0.05; Two stars for p&lt;0.01; Three stars for p&lt;0.001.\nNote that in the heatmap from checkTPbject4$med_coefficients, only the selected exposures, mediators and outcomes that we use to do mediation on will show up. The rows in the heatmaps are mediators and the column represents exposure-outcome pairs. For each exposure-outcome pair, 4 result are shown: IE (indirect effect), TE (total effect), PM(Proportion Mediated) and APM(Adjusted Proportion Mediated). Please see Details section for more information. The “BK” before the names of exposures-outcome pairs means that this mediation is using the Coventional Baron-Kenny “product” method."
  },
  {
    "objectID": "simple_code.html#data-download",
    "href": "simple_code.html#data-download",
    "title": "Tutorial(simple) - Code",
    "section": "\n4.6 Data Download",
    "text": "4.6 Data Download\nTo save all your output, including data, results, and visualization output as an .rda file, you can use the save() function in R.\n\nShow the codesave(exposure1,Omics1,outcome1,covariates1,\n     reduced_Omics1,Correlations_object,Risks_object,\n     mediation_object3,mediation_plots3,\n     TPObject1,TPObject2,TPObject3,TPObject4,\n     checkTPObject4,\n     \"Tutorial_simple_output.rda\")"
  },
  {
    "objectID": "pub_ho.html",
    "href": "pub_ho.html",
    "title": "Publication & honor",
    "section": "",
    "text": "Luyan Wu, Wenhui Zeng, Liandong Feng, Yuxuan Hu, Yidan Sun, Yingxiao Yan, HongYuan Chen & Deju Ye. An activatable radiometric near-inflared fluorescent probe for hydrogen sulfide imaging in vivo. Science China Chemistry. 2020;63(5):741-750 Yan Y, Smith E, Melander O, Ottosson F. The association between plasma metabolites and future risk of all‐cause mortality. Journal of Internal Medicine. 2022;292(5):804-815.  Schillemans T, Yan Y, Ribbenstedt A, Donat-Vargas C, Lindh C, Kivirante H, Wolk A, et al.OMICs signatures linking persistent organic pollutants to cardiovascular disease in the Swedish Mammography Cohort [Submitted]"
  },
  {
    "objectID": "pub_ho.html#publications",
    "href": "pub_ho.html#publications",
    "title": "Publication & honor",
    "section": "",
    "text": "Luyan Wu, Wenhui Zeng, Liandong Feng, Yuxuan Hu, Yidan Sun, Yingxiao Yan, HongYuan Chen & Deju Ye. An activatable radiometric near-inflared fluorescent probe for hydrogen sulfide imaging in vivo. Science China Chemistry. 2020;63(5):741-750 Yan Y, Smith E, Melander O, Ottosson F. The association between plasma metabolites and future risk of all‐cause mortality. Journal of Internal Medicine. 2022;292(5):804-815.  Schillemans T, Yan Y, Ribbenstedt A, Donat-Vargas C, Lindh C, Kivirante H, Wolk A, et al.OMICs signatures linking persistent organic pollutants to cardiovascular disease in the Swedish Mammography Cohort [Submitted]"
  },
  {
    "objectID": "pub_ho.html#conference-and-awards",
    "href": "pub_ho.html#conference-and-awards",
    "title": "Publication & honor",
    "section": "\n2 Conference and awards",
    "text": "2 Conference and awards\n\n\nMetabolomics 2022, Valencia, Spain. - Speaker, with award\n\n\nSwedish Bioinformatics workshop 2022,Umeå, Sweden. - Speaker\n\n\nNordic rye forum 2022, Stockholm, Sweden - Speaker"
  },
  {
    "objectID": "pub_ho.html#key-competence",
    "href": "pub_ho.html#key-competence",
    "title": "Publication & honor",
    "section": "\n3 Key competence",
    "text": "3 Key competence\n\n\nR/shiny (data cleaning, manipulation, analysis, and visualization) - Expert\n\n\nBiostatistics and epidemiological research - Expert\n\n\nSPSS, Excel & Microsoft Office suite - Expert\n\n\npython - Intermediate"
  },
  {
    "objectID": "pub_ho.html#languages",
    "href": "pub_ho.html#languages",
    "title": "Publication & honor",
    "section": "\n4 Languages",
    "text": "4 Languages\n\n\nMandarin (Native speaker)\n\n\nEnglish (Native level)\n\n\nSwedish (Intermediate/B1 level, SAS certificated)"
  },
  {
    "objectID": "pub_ho.html#references",
    "href": "pub_ho.html#references",
    "title": "Publication & honor",
    "section": "\n5 References",
    "text": "5 References\nFilip Ottoson Postdoctoral Researcher – Lund University Email: filip.ottoson@med.lu.se Tel: +46739699000 Carl Brunius Associate Professor – Chalmers University of Technology Email: calbrunius@chalmers.se Tel:\n\n© 2023 Yingxiao Yan ★★★★★. All rights reserved"
  },
  {
    "objectID": "pub_ho.html#news",
    "href": "pub_ho.html#news",
    "title": "Publication & honor",
    "section": "\n6 News",
    "text": "6 News\n\nJanuary 23, 2024: I will be at Bayes on the Beach 2024 in February. I will give a talk about reliable amortized Bayesian inference with neural networks and co-lead a workshop on amortized Bayesian workflows.\nDecember 2023: We launched the BayesFlow Forums! The BayesFlow Forums provide a community for asking and answering questions about all aspects of BayesFlow and amortized Bayesian workflows in general. Hop over and join the discussion!\nOctober 11, 2023: In our recent preprint, we make simulation-based inference more data-efficient by leveraging self-consistency properties of the Bayesian joint model. You find the preprint on arXiv. Update: Published in the NeurIPS UniReps workshop.\nSeptember 22, 2023: Our paper “Detecting Model Misspecification in Amortized Bayesian Inference with Neural Networks” has been awarded the DAGM GCPR Honorable Mention at this year’s German Conference on Pattern Recognition. Huge thanks to my great co-authors!\nSeptember 6, 2023: Our paper “Detecting Model Misspecification in Amortized Bayesian Inference with Neural Networks” has been accepted with oral presentation at the German Conference for Pattern Recognition 2023. Learn more at the project website.\nJune 21, 2023: I will be at the ELLIS Doctoral Symposium 2023 in Helsinki from August 28 to September 1, 2023. Absolutely thrilled to meet other PhD students and researchers and talk about machine learning research in beautiful Helsinki!\nMay 9, 2023: Our paper “JANA: Jointly Amortized Neural Approximation of Complex Bayesian Models” has been accepted to UAI 2023 (Uncertainty in AI). Check out the project page to find out more!\nMarch 29, 2023: I’ll be presenting our paper on Meta-Uncertainty in Bayesian Model Comparison at AISTATS 2023 from April 25-27 in Valencia, Spain. You find links to the paper and code on my Projects page or on the dedicated paper website. If you see me around at AISTATS, let’s chat!"
  },
  {
    "objectID": "pub_ho.html#featured-blog-posts",
    "href": "pub_ho.html#featured-blog-posts",
    "title": "Publication & honor",
    "section": "\n7 Featured Blog Posts",
    "text": "7 Featured Blog Posts\n\n\n\n\nShow the code#don't run code, but show code\n3\n\n\n\nShow the code#run code, and show code, don't show output\n4\n\n\n\n\n[1] 2\n\n\n\nShow the code#run code, and show code, and show output\n5\n\n[1] 5"
  },
  {
    "objectID": "papers.html",
    "href": "papers.html",
    "title": "Relevant papers",
    "section": "",
    "text": "Download main paper \n\n\n\n\nMain paper\n\n\n\nSchillemans T, Shi L, Liu X, Åkesson A, Landberg R, Brunius C. Visualization and Interpretation of Multivariate Associations with Disease Risk Markers and Disease Risk-The Triplot. Metabolites. 2019 Jul 6;9(7):133. doi: 10.3390/metabo9070133\n\n\n\n\n\n\nOther papers\n\nBodén S, Zheng R, Ribbenstedt A, Landberg R, Harlid S, Vidman L, Gunter MJ, Winkvist A, Johansson I, Van Guelpen B, Brunius C. Dietary patterns, untargeted metabolite profiles and their association with colorectal cancer risk. Sci Rep. 2024 Jan 26;14(1):2244. doi: 10.1038/s41598-023-50567-6.\nSchillemans T, Yan Y, Ribbenstedt A, Donat-Vargas C, Lindh CH, Kiviranta H, Rantakokko P, Wolk A, Landberg R, Åkesson A, Brunius C. OMICs Signatures Linking Persistent Organic Pollutants to Cardiovascular Disease in the Swedish Mammography Cohort. Environ Sci Technol. 2024 Jan 16;58(2):1036-1047. doi: 10.1021/acs.est.3c06388.\nTitova OE, Brunius C, Warensjö Lemming E, Stattin K, Baron JA, Byberg L, Michaëlsson K, Larsson SC. Comprehensive analyses of circulating cardiometabolic proteins and objective measures of fat mass. Int J Obes (Lond). 2023 Nov;47(11):1043-1049. doi: 10.1038/s41366-023-01351-z.\n\n\nPoster"
  },
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "Installation",
    "section": "",
    "text": "The TriplotGUI tool can be accessible online at here. If you want to use TriplotGUI as a stand-alone application (using it only on a local computer), please follow the instruction below.\nInstall packages\nTo install and use TriplotGUI as a stand-alone application on your local computer, start by opening your R console or RStudio. Then, install the required packages by running the following code:\n\nShow the codeif (!require(remotes)) {\n  install.packages(\"remotes\")  # Install the package if it's not available.\n  library(remotes)             # Load it after installation.\n}\n\nremotes::install_gitlab(\"YingxiaoYan/TriplotGUI\")\n\n\nDuring installation, you may encounter prompts in your console. For package updates, it is recommended to choose “3. None”. If asked whether you want to install from source packages that need compilation, select “No”. When prompted about updating all, some, or none, it is advisable to choose “n”. \n\n\n\n\nLoad libraries\nOnce the installation is complete, load the TriplotGUI library by executing:\n\nShow the codelibrary(TriplotGUI)\n\n\nChange the maximize size of data file allowed\nIf you wish to change the maximum allowed data file size (the default is 5 MB), you can specify your preferred maximum size using the following code:\n\nShow the codefilesize=100  ##MB\noptions(shiny.maxRequestSize=filesize*1024^2)\n\n\nActivate the user interface\nTo activate the graphical user interface, run:\n\nShow the codeTriplotGUI_shiny()\n\n\nThis will launch the TriplotGUI application on your local machine. Keep in mind that larger datasets may slow down the tool’s performance, so it is recommended to perform some variable selection before using very large datasets."
  },
  {
    "objectID": "explanation.html",
    "href": "explanation.html",
    "title": "explanation",
    "section": "",
    "text": "Scss rule explain\nThe index main page\nCV page\n.embed-container iframe\n.embed-container:\nThis is a class selector targeting an HTML element with the class name embed-container. It is likely used as a container for embedding various types of content.\niframe: This is an HTML element selector targeting the iframe element.\nCombined: .embed-container iframe: This selector targets any iframe element that is a descendant (child, grandchild, etc.) of an element with the class embed-container.\nThe  element in HTML is used to embed external resources, such as images, audio, videos, or other multimedia content, into a web page. It provides a generic container that allows you to include various types of content within your HTML document.\n&lt;object data=\"example.pdf\" type=\"application/pdf\" width=\"500\" height=\"600\"&gt; Your browser does not support embedded PDF files. &lt;a href=\"example.pdf\"&gt;Download the PDF&lt;/a&gt; instead. &lt;/object&gt;\nThe &lt;iframe&gt; element in HTML (Inline Frame) is used to embed another HTML document within the current document. It allows you to display content from another source, such as a different webpage, in a specified rectangular area on your page. The content inside the &lt;iframe&gt; is essentially a separate document with its own HTML, CSS, and JavaScript.\n&lt;iframe src=\"https://www.example.com\" width=\"600\" height=\"400\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;\nThe &lt;embeded&gt;Used to embed external applications or plugins.\n&lt;embed src=\"example.swf\" type=\"application/x-shockwave-flash\" width=\"400\" height=\"300\"&gt;\n#toolbar=0 This fragment is typically used with PDFs to control the visibility of the PDF viewer’s toolbar. Setting it to 0 generally means hiding the toolbar. The toolbar in a PDF viewer often contains options for navigation, zooming, and other related actions.\nThe height: 0; CSS property is used to set the height of an element to zero pixels. When applied to an element, this property essentially makes the element invisible in terms of its vertical dimension. The content inside the element, if any, will still exist but will be collapsed or hidden.\nHere’s a common use case for height: 0; along with other properties:\nThe CSS property overflow: hidden; is used to control how content that overflows the content area of an element should be handled. When applied to an element, it hides any content that exceeds the specified dimensions of the element’s box.\n\n\n\n \n\n \n\n  \n    \n© 2024 Yingxiao Yan  CC BY-SA 4.0\n   \n    \n TriplotGUI  TriplotGUI Gitlab \nEdit this pageView sourceReport an issue\n    \n Main page of this tutorial  View source of this site on GitLab"
  },
  {
    "objectID": "complex.html",
    "href": "complex.html",
    "title": "Tutorial(complex)- User Interface",
    "section": "",
    "text": "Before you begin, ensure that you have access to either the online version of TriplotGUI or can use TriplotGUI as a stand-alone application on your computer following Setup."
  },
  {
    "objectID": "complex.html#step-1-pcawgcna-plots",
    "href": "complex.html#step-1-pcawgcna-plots",
    "title": "Tutorial(complex)- User Interface",
    "section": "Step 1: PCA/WGCNA plots",
    "text": "Step 1: PCA/WGCNA plots\nTo begin the analysis in TriplotGUI, first upload the Omics data (Example2_Omics.rds) and the auxiliary data (Example2_auxiliary.xlsx) using the interface in step 1. Once the Omics data is uploaded, a series of additional buttons will appear, allowing you to make modifications to either the Omics or auxiliary data if necessary.\nNext, inspect the classes of variables in both datasets. You will find that the classes for the Omics data look correct; however, there are issues with the auxiliary data. Specifically, some categorical variables are incorrectly classified as character type instead of factor. To resolve this, change the class of these variables to factor, focusing on \"PairedInfo\", \"Education\", and \"PhysicalActivityIndex\".\n\n\n\n\n\n\n\n\n\nTo proceed with the analysis in TriplotGUI, adjust the “Data analysis settings” and “Visualization settings” according to the provided figure. In this example, we’ll employ the WGCNA (Weighted Gene Co-expression Network Analysis) method to obtain principal components/modules, while utilizing auxiliary data to generate more informative visualizations.\nAfter configuring the settings, we can examine several informative plots at step 1.\n\n\n You can then play around the visualization panel on the right side and view all the plots (score, loadings, biplot, screeplot).\n\n\n\n\n\n\n\n\nScree Plot: Assess the variance explained by each cluster and the first principal component of each cluster.\n\nScore Plot: Visualize sample clustering and identify any outliers.\n\nLoadings Plot: Examine the contribution of each variable to the principal components.\n\nBiplot: Get a comprehensive view of how samples relate to each other alongside variable contributions."
  },
  {
    "objectID": "complex.html#step-2-3-exposures-correlations-outcomes-associations",
    "href": "complex.html#step-2-3-exposures-correlations-outcomes-associations",
    "title": "Tutorial(complex)- User Interface",
    "section": "Step 2-3: Exposures’ correlations & Outcomes’ associations",
    "text": "Step 2-3: Exposures’ correlations & Outcomes’ associations\nAfter completing step 1, proceed to upload the exposures and covariate data in step 2 of the TriplotGUI interface.\n\n\n\n\n\n\n\n\n\nUpon briefly inspecting the variable classes, you’ll notice some important details:\n\nIn the exposure data, \"HFI\" (Healthy Food Index) is classified as a factor variable, while \"BSDS\" (Baltic Sea Food Index) is a numeric variable. While you may not need to change their classes at this point, being aware of these classifications is crucial for understanding how they’ll be treated in subsequent analysis steps.\nIn the covariate data, you’ll observe a variable called \"X\". This variable is likely an artifact of uploading the data from a CSV file, where the observation numbers may have been automatically generated as a new variable during the file import process. Since \"X\" is not an actual covariate, it should be removed from the dataset to prevent it from influencing your analysis.\nIn the covariate data, when you inspect the classes of variables you will find that some categorical variables are incorrectly classified as numeric type instead of factor. To resolve this, change the class of these variables to factor, focusing on \"Gender\", \"Education\", \"Smoking\" and \"PhysicalActivityIndex\".\n\nUnderstanding these nuances in your data structure is essential for ensuring accurate analysis and interpretation of results. By addressing these points early in the process, you set the stage for a more robust and reliable analysis using TriplotGUI.\nChange your “Data analysis settings” as shown in the figure below.\n\n\n\nYou can then briefly view the correlation coefficients in the “Visualizations” section by clicking Refresh plot.”\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nSelect One-hot-encoding in Categorical variables transform categorical exposure variables (like \"HFI\") with more than two classes into multiple binary variables. This process creates n binary variables for a categorical variable with n classes. The correlation coefficients between modules and these new binary variables are then calculated. However, One-hot-encoding is limited for meaningful use. The binary variables may be only meaningful when we want to compare one level to all the other levels together. We use this option for categorical variable \"HFI\" for demonstration purpose. Ideally, one should use Use Original for HFI.\nIf Use Original is selected for Categorical variables, no transformation is made on the categorical exposure variables. In this case, linear models regressing modules on the \"HFI\" variable are used for correlation analysis. The correlation coefficients are derived as the square root of the proportion of \"HFI\"’s sum of squares in the total sum of squares.\n\nFor handling Missing values, TriplotGUI adopts the approaches from the cor package when dealing with continuous exposures. For more detailed information on these methods, refer to the documentation of the cor package.\n\n\n\nIn step 3 of the TriplotGUI interface, upload the outcome and covariate data. Upon inspecting the variable classes, you’ll notice:\n\nIn the outcome data, \"BMI\" is classified as a numeric variable, while \"BMI_cat\" and \"T2D\" are factor variables.\nIn the covariate data, you’ll observe a variable called \"X\". This variable is likely an artifact of uploading the data from a CSV file, where the observation numbers may have been automatically generated as a new variable during the file import process. Since \"X\" is not an actual covariate, it should be removed from the dataset to prevent it from influencing your analysis.\nIn the covariate data, when you inspect the classes of variables you will find that some categorical variables are incorrectly classified as numeric type instead of factor. To resolve this, change the class of these variables to factor, focusing on \"Gender\", \"Education\", \"Smoking\" and \"PhysicalActivityIndex\".\n\n\n\n\n\n\n\n\n\n\nChange your “Data analysis settings” and “Visulization settings” as shown in the figure below.\n\n\n\n\n\n\nYou can then briefly view the risk estimates in the “Visualizations” section by clicking Refresh plot.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWhen using TriplotGUI, the handling of categorical outcomes and pairing variables depends on your chosen settings:\n\nWithout a pairing variable:\n\nIf not using multinomial regression, categorical outcomes with more than two classes are one-hot encoded into binary variables. Logistic regression is applied to binary outcomes (including those from one-hot encoding), while linear regression is used for continuous outcomes.\nIf using multinomial regression, it’s applied directly to categorical outcomes with more than two classes, producing n-1 estimates. Logistic regression is used for binary outcomes, and linear regression for continuous ones.\n\n\nWhen a pairing variable is provided:\n\nWithout multinomial regression, categorical outcomes are one-hot encoded. Conditional logistic regression is then applied to binary outcomes (including those from one-hot encoding), and linear mixed models are used for continuous outcomes, incorporating the pairing information.\nWith multinomial regression (as in our example), the pairing information is not used. Multinomial regression is applied to categorical outcomes, giving n-1 estimates. Logistic regression is used for binary outcomes, and linear regression for continuous ones.\n\n\n\n\n\nNote that it is possible for users to skip Step 2 or 3, if their interests focus on only outcome associations or exposure correlations with Omics variables."
  },
  {
    "objectID": "complex.html#step-4-visualization-of-triplot",
    "href": "complex.html#step-4-visualization-of-triplot",
    "title": "Tutorial(complex)- User Interface",
    "section": "Step 4: Visualization of Triplot",
    "text": "Step 4: Visualization of Triplot\n\nIn the triplot visualization, black arrows represent loadings of Omics variables, forming patterns in different modules (axes). Blue circle points show exposure correlations with the modules, while red square points indicate outcome associations with the modules.\n\n\n\n\n\n\nNote\n\n\n\nNote that we use first and second module for our example here. In reality, you may navigate to the “Comparative Visualization” tab in TriplotGUI’s interface already to view which modules may be more of your interest (that are associated with specific exposures and outcomes).\n\n\nBased on the triplot visualization of the TriplotGUI interface, we can interpret the following key points:\n\nThe first (top right) and third (bottom left) dimension generally represents a spectrum of dietary healthiness. Healthier foods (e.g., \"Fruits\", \"Vegetables\") and higher healthy food indices (\"HFI\", \"BSDS\") are positioned on one side in the first dimension, while less healthy foods (e.g., \"Hamburger\", \"Sausage\", \"Margarine\") are on the opposite side in the third dimension.\nThe second (top left) and fourth (bottom right) dimensions are associated with health outcomes, including the numeric outcome \"BMI\", binary outcome \"T2D\", and one-hot-encoded categorical \"BMI_cat\" outcome.\n\nExplanation for some variables in the plot:\n\n\n\"HFI\" stands for healthy food index. A higher \"HFI\" suggests healthier diet. \"HFI\" ranges from 0 to 6. You can see that there are HFI_0, HFI_1…HFI_6 in the figure and that is because \"HFI\" is used as a factor exposure variable in step 2 and is one-hot-encoded to the same number of binary variables as its number of levels. For example, HFI_6 is a binary variable where individuals with \"HFI\" as 6 (most healthy diet people) will be labeled as 1 and the rest of individuals will be labelled as 0. HFI_0 is a binary variable where individuals with \"HFI\" as 0 (most unhealthy diet people) will be labeled as 1 and the rest of individuals will be labelled as 0. HFI_1…HFI_5 has limited use since it only separates the group of people with certain \"HFI\" value from to the rest, which is a mixture of people with healthier and less healthier diet.\n\n\"BSDS\" stands for Baltic Sea Diet Score ranging. A higher \"BSDS\" suggests healthier diet. \"BSDS\" is used as a numeric variable ranging from 2 to 25 in the correlation.\n\nBMI_cat_obese, BMI_cat_overweight, BMI_cat_underweight are the odds ratio generated from the multinomial regression, since \"BMI_cat\" is a categorical outcome and multinomial regression is performed in step 3 in the interface in this example. Normal weight is uses as a reference and odds ratio of obese, overweight and underweight is produced. (Note that the first level of the factor variable is set as the default reference, in this case it is normal).\n\n\nAdjusting for \"Age\", \"Gender\", \"Smoking\", \"Education\" and \"FastingGlucose\", the first module (on x-axis) correlates positively with generally healthy food (e.g. \"fruits\", \"vegatables\") and food index (e.g. \"BSDS\") and negatively with unhealthy food (e.g. \"Hamburger\", \"pizza\"). It also reversely associated with \"T2D\" and \"BMI\". From the result from \"BMI_cat\", this components also reversely associated with being obese.\nAdjusting for \"Age\", \"Gender\", \"Smoking\", \"Education\" and \"FastingGlucose\", the second module (on y-axis) associated positively with generally healthy food (e.g. \"fruits\", \"vegatables\") and food index (e.g. \"BSDS\") and negatively with unhealthy food (e.g. \"Hamburger\", \"pizza\"). However, the module correlates also positively with \"T2D\",\"BMI\", obese, overweight and negatively associated with underweight.\n\nBased on what we summarized above, the two modules may be associated with a overall healthy eating pattern. And in this healthy eating pattern, the first module is associated more with the beneficial effect on health and the second module represents the adverse health effect."
  },
  {
    "objectID": "complex.html#step-5-triplot-with-mediation",
    "href": "complex.html#step-5-triplot-with-mediation",
    "title": "Tutorial(complex)- User Interface",
    "section": "Step 5: Triplot with mediation",
    "text": "Step 5: Triplot with mediation\nIn step 5 of the TriplotGUI interface, we focus on a specific set of variables for mediation analysis: we select \"BSDS\" (Baltic Sea Diet Score) and \"Hamburger\" as our exposures, \"BMI\" and \"T2D\" as outcome to enter our next step. We choose first and second modules as our mediators.\nThis time, we perform the mediation analysis using the counterfactual/potential outcome method, implemented through the mediation package in R on our exposures (i.e. \"BSDS\", \"Hamburger\"), mediators (i.e. the first and second modules) and outcome (i.e. \"T2D\", \"BMI\") of interest, adjusting for \"Age\", \"Gender\", \"Smoking\", \"Education\" and \"FastingGlucose\" for both exposure-mediator and mediator-outcome relationship.\n\n\n\n\n\n\nNote\n\n\n\nIn the counterfactual mediation analysis, contrast values of treatment and controls for each exposure needs to be specified. For each individual, the analysis considers what would happen if they received the treatment versus if they received the control. In brief, the algorithm uses these contrast values to calculate the potential outcomes under each scenario to estimate the direct and indirect effects. For a detailed explanation please refer to this paper of the mediation R package.\nIf an exposure variable is continuous (numeric variable), it is recommended that the treatment and control contrast values are chosen between the range of the exposure variable. If an exposure variable is categorical (factor variable), the treatment and control contrast values should be chosen from the levels of the exposure variable.\n\n\n\n\nUse the following settings for your data analysis in TriplotGUI. Mediation analysis is then performed using the counterfactual method on the our selected exposures, mediators and our selected outcomes, adjusting for covariates for both exposure-mediator and mediator-outcome relationship.\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nNote that you need to click Do mediation to start running the mediation analysis.\n\n\n\nYou can explore the “Visualization settings” to customize how your plot is displayed. Start by selecting to show only the proportion mediated (PM). This will help you focus on the mediation effects in your analysis.\nAdditionally, adjust the limits of the plot to enhance visibility. By fine-tuning these settings, you can ensure that the points representing your mediation results are more clearly visible, allowing for better interpretation and understanding of the data. Note that the confidence interval that beyond the limits of the plot will not be displayed on the plot.\n\n\n\n\n\n\n\n\n\nFour green triangles are displayed on the figure. Their x and y coordiates represent the eight combinations of exposures, mediators and outcomes.\n\nexposure=BSDS, mediator= module 1, outcome=BMI\nexposure=BSDS, mediator= module 2, outcome=BMI\nexposure=Hamburger, mediator= module 1, outcome=BMI\nexposure=Hamburger, mediator= module 2, outcome=BMI\nexposure=BSDS, mediator= module 1, outcome=T2D\nexposure=BSDS, mediator= module 2, outcome=T2D\nexposure=Hamburger, mediator= module 1, outcome=T2D\nexposure=Hamburger, mediator= module 2, outcome=T2D\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nConfidence intervals are automatically removed from the figure if they fall outside the set limits.\nIn certain mediations, the direct and indirect effects may have opposite directions. This can result in a proportion mediated (PM) greater than 1. This occurs because the total effect might be smaller than the indirect effect.\n\n\n\nBased on the figure showing the mediation analysis results, we can observe the direction and magnitude of proportion mediated for the 2 mediators (module 1 and 2), all the exposures and outcomes. Based on the confidence interval, we also observed that the PM for BSDS-module 1-BMI and BSDS-module 2-BMI mediation is significant.\n\nTo visualize the adjusted proportion mediated (APM) and add layers of correlation and risk estimates, use the following settings.\n\n\n\n\n\n\n\n\nBy observing this figure, we can see the direction and magnitude of adjusted proportion mediated (APM) for the two mediators across all exposures and outcomes. The positioning of the points is similar to what we observed for the proportion mediated (PM).\nNotably, the APM for BSDS (Baltic Sea Diet Score) as the exposure and T2D (Type 2 Diabetes) as the outcome is smaller than their corresponding PM. This difference occurs because the indirect and direct effects for this mediation pathway are of similar size but in opposite directions. This opposition leads to a smaller total effect and consequently a larger PM. However, the APM is not affected by the directionality of the direct and indirect effects, providing a more stable measure of mediation.\n\n\n\n\n\n\nNote\n\n\n\n\nNo confidence intervals are shown for APM. This is because APM values cannot be directly calculated from the mediation analysis in the mediation R package, unlike the proportion mediated (PM).\nThe APM is always smaller than 1, even when direct and indirect effects are in opposite directions. This is due to the calculation method of APM, which uses the sum of the absolute values of indirect and direct effects as the denominator. \\[APM=\\frac{IE}{|IE|+|DE|}\\cdot\\frac{|IE+DE|}{IE+DE}=\\frac{IE}{IE+DE}\\cdot\\frac{|IE+DE|}{|IE|+|DE|}=\\frac{IE}{|IE|+|DE|}\\cdot\\frac{IE+DE}{|IE+DE|}\\]\n\n\n\nIn step 5B of the TriplotGUI interface, you can view barplots that display the direct, indirect, and total effects for each exposure-mediator-outcome combination. These barplots offer a convenient visual tool to check the direction and magnitude of mediation estimates.\n\nBased on the barplot and the triplot with mediation, we’ve observed significant proportion mediated for BSDS-module 1/2-BMI mediations. To further explore the indirect, direct, and total effects of different combinations of mediations, you can return to Step 5A in the TriplotGUI interface to run more mediation analysis."
  },
  {
    "objectID": "complex.html#comparative-visualization",
    "href": "complex.html#comparative-visualization",
    "title": "Tutorial(complex)- User Interface",
    "section": "Comparative Visualization",
    "text": "Comparative Visualization\nUsers can examine the heatmaps of correlations, risk estimations, and mediation results in the TriplotGUI interface. To focus on specific aspects of interest, navigate to the “Visualization settings” section and remove unwanted mediators, exposures, or outcomes. This customization allows users to display only the correlation, risk estimation, and mediation results they find most relevant.\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nSignificance is indicated as follows. One star for p&lt;0.05; Two stars for p&lt;0.01; Three stars for p&lt;0.001.\nThe first two plots, correlation coefficients with exposures and risk estimates of outcomes will show all the exposure and outcome variables that are not removed from visualization.\nNote that only the selected exposures, mediators and outcomes that we use to do mediation on will show up in the mediation results. The rows in the heatmaps are mediators and the column represents exposure-outcome pairs. For each exposure-outcome pair, 4 results are shown: IE (indirect effect), TE (total effect), PM(Proportion Mediated) and APM(Adjusted Proportion Mediated). Please read Manual for more information. The “CF” before the names of exposures-outcome pairs means that this mediation is using the Counterfactual method."
  },
  {
    "objectID": "complex.html#data-download",
    "href": "complex.html#data-download",
    "title": "Tutorial(complex)- User Interface",
    "section": "Data download",
    "text": "Data download\nRelevant data, intermediate results, can then be viewed and downloaded here in the interface."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About us",
    "section": "",
    "text": "A great person indeed\n\n\n Role: Main contributor of the TriplotGUI package and manuscript\n Title: PhD candidate\n Affiliation: Food and nutrition science division, Department of Life science, Chalmers University of Technology\n Email:  yingxiao@chalmers.se"
  },
  {
    "objectID": "about.html#yingxiao-yan",
    "href": "about.html#yingxiao-yan",
    "title": "About us",
    "section": "",
    "text": "A great person indeed\n\n\n Role: Main contributor of the TriplotGUI package and manuscript\n Title: PhD candidate\n Affiliation: Food and nutrition science division, Department of Life science, Chalmers University of Technology\n Email:  yingxiao@chalmers.se"
  },
  {
    "objectID": "about.html#carl-brunius",
    "href": "about.html#carl-brunius",
    "title": "About us",
    "section": "\n  Carl Brunius",
    "text": "Carl Brunius\n\n\n\n\nKnivsta inhabitor\n\n\n Role: Supervisor of Yan\n Title: Associate professor\n Affiliation: Food and nutrition science division, Department of Life science, Chalmers University of Technology\n Email:  carl.brunius@chalmers.se"
  },
  {
    "objectID": "about.html#anton-ribbenstedt",
    "href": "about.html#anton-ribbenstedt",
    "title": "About us",
    "section": "\n Anton Ribbenstedt",
    "text": "Anton Ribbenstedt\n\n\n\n\nHair length changes all the time\n\n\n Role: Code helper and guider\n Title: Research engineer\n Affiliation: Chalmers Mass Spectrometry Infrastructure, Department of Life science, Chalmers university of Technology\n Email:  anton.ribbenstedt@chalmers.se  \n\n\n\n\n\n\nWe thank for our funder:"
  },
  {
    "objectID": "complex_code.html",
    "href": "complex_code.html",
    "title": "Tutorial(complex) - Code",
    "section": "",
    "text": "The code at this page can be downloaded here\nBefore starting, please ensure you have installed the TriplotGUI package following the Setup instructions."
  },
  {
    "objectID": "complex_code.html#check-healthynordicdiet_2",
    "href": "complex_code.html#check-healthynordicdiet_2",
    "title": "Tutorial(complex) - Code",
    "section": "\n3.1 Check HealthyNordicDiet_2",
    "text": "3.1 Check HealthyNordicDiet_2\nCheck the HealthyNordicDiet_2 list:\n\nShow the codeclass(HealthyNordicDiet_2)\n\n[1] \"list\"\n\nShow the codenames(HealthyNordicDiet_2)\n\n[1] \"ClinData\"       \"MetaboliteData\" \"FoodData\""
  },
  {
    "objectID": "complex_code.html#check-datasets",
    "href": "complex_code.html#check-datasets",
    "title": "Tutorial(complex) - Code",
    "section": "\n3.2 Check datasets",
    "text": "3.2 Check datasets\nCheck the names of variables in each data:\n\nShow the codecolnames(HealthyNordicDiet_2$ClinData)  \n\n [1] \"ID\"                    \"T2D\"                   \"PairedInfo\"           \n [4] \"Energy\"                \"Gender\"                \"Age\"                  \n [7] \"BMI\"                   \"Smoking\"               \"PhysicalActivityIndex\"\n[10] \"Education\"             \"FastingGlucose\"       \n\nShow the codecolnames(HealthyNordicDiet_2$MetaboliteData)\n\n [1] \"Pipecolic.acid.betaine\"         \"lysoPC.18.0.\"                  \n [3] \"HP143.1179.1.55\"                \"lysoPE.22.6.\"                  \n [5] \"HN151.0065.4.97\"                \"RP225.1482.9.15\"               \n [7] \"X3.4.5.Trimethoxycinnamic.acid\" \"DHA\"                           \n [9] \"RP383.1671.10.53\"               \"gama.tocopherol\"               \n[11] \"RP431.3516.11.96\"               \"RP490.3516.8.99\"               \n[13] \"lysoPC.22.6.\"                   \"Steroid.glucuronide\"           \n[15] \"RP684.5545.13.41\"               \"RP197.0926.3.17\"               \n[17] \"RP303.6468.9.98\"                \"RP816.5684.12.52\"              \n[19] \"RP827.5356.11.88\"               \"RP826.5442.12.17\"              \n[21] \"RN201.1498.8.23\"                \"RN203.0022.3.00\"               \n[23] \"EPA\"                            \"PC.18.2.15.0.\"                 \n[25] \"RN814.5610.12.14\"               \"RN153.0190.3.5\"                \n[27] \"RN427.1641.10.59\"               \"RN457.1742.10.50\"              \n[29] \"RN830.5845.12.46\"               \"RN446.1541.10.59\"              \n[31] \"RN472.1596.10.53\"              \n\nShow the codecolnames(HealthyNordicDiet_2$FoodData)\n\n [1] \"HFI\"           \"BSDS\"          \"Wholegrains\"   \"Sausage\"      \n [5] \"Pizza\"         \"Refined.bread\" \"Fruits\"        \"Liquor\"       \n [9] \"Wine\"          \"Hamburger\"     \"Poultry\"       \"Fish\"         \n[13] \"Margarine\"     \"Cabbage\"       \"Carrot\"        \"low_fat_Dairy\"\n[17] \"Vegetables\""
  },
  {
    "objectID": "complex_code.html#check-variables-class",
    "href": "complex_code.html#check-variables-class",
    "title": "Tutorial(complex) - Code",
    "section": "\n3.3 Check variables’ class",
    "text": "3.3 Check variables’ class\nWe then transform the data to dataframe format and use TriplotGUI’s checkdata() function to examine the classes of variables.\n\nShow the codeClinData &lt;- as.data.frame(HealthyNordicDiet_2$ClinData)\nMetaboliteData &lt;- as.data.frame(HealthyNordicDiet_2$MetaboliteData)\nFoodData &lt;- as.data.frame(HealthyNordicDiet_2$FoodData)\n\nClinData_check &lt;- checkdata(ClinData)\nMetaboliteData_check &lt;- checkdata(MetaboliteData)\nFoodData_check &lt;- checkdata(FoodData)\n\n\n\nShow the codeClinData_check$class_summary_statistics\n\n$check_class_vector\n                   ID                   T2D            PairedInfo \n            \"numeric\"              \"factor\"              \"factor\" \n               Energy                Gender                   Age \n            \"numeric\"              \"factor\"             \"numeric\" \n                  BMI               Smoking PhysicalActivityIndex \n            \"numeric\"              \"factor\"              \"factor\" \n            Education        FastingGlucose \n             \"factor\"             \"numeric\" \n\n$check_class_table\ncheck_class_vector\n factor numeric \n      6       5 \n\nShow the codeMetaboliteData_check$class_summary_statistics\n\n$check_class_vector\n        Pipecolic.acid.betaine                   lysoPC.18.0. \n                     \"numeric\"                      \"numeric\" \n               HP143.1179.1.55                   lysoPE.22.6. \n                     \"numeric\"                      \"numeric\" \n               HN151.0065.4.97                RP225.1482.9.15 \n                     \"numeric\"                      \"numeric\" \nX3.4.5.Trimethoxycinnamic.acid                            DHA \n                     \"numeric\"                      \"numeric\" \n              RP383.1671.10.53                gama.tocopherol \n                     \"numeric\"                      \"numeric\" \n              RP431.3516.11.96                RP490.3516.8.99 \n                     \"numeric\"                      \"numeric\" \n                  lysoPC.22.6.            Steroid.glucuronide \n                     \"numeric\"                      \"numeric\" \n              RP684.5545.13.41                RP197.0926.3.17 \n                     \"numeric\"                      \"numeric\" \n               RP303.6468.9.98               RP816.5684.12.52 \n                     \"numeric\"                      \"numeric\" \n              RP827.5356.11.88               RP826.5442.12.17 \n                     \"numeric\"                      \"numeric\" \n               RN201.1498.8.23                RN203.0022.3.00 \n                     \"numeric\"                      \"numeric\" \n                           EPA                  PC.18.2.15.0. \n                     \"numeric\"                      \"numeric\" \n              RN814.5610.12.14                 RN153.0190.3.5 \n                     \"numeric\"                      \"numeric\" \n              RN427.1641.10.59               RN457.1742.10.50 \n                     \"numeric\"                      \"numeric\" \n              RN830.5845.12.46               RN446.1541.10.59 \n                     \"numeric\"                      \"numeric\" \n              RN472.1596.10.53 \n                     \"numeric\" \n\n$check_class_table\ncheck_class_vector\nnumeric \n     31 \n\nShow the codeFoodData_check$class_summary_statistics\n\n$check_class_vector\n          HFI          BSDS   Wholegrains       Sausage         Pizza \n     \"factor\"     \"numeric\"     \"numeric\"     \"numeric\"     \"numeric\" \nRefined.bread        Fruits        Liquor          Wine     Hamburger \n    \"numeric\"     \"numeric\"     \"numeric\"     \"numeric\"     \"numeric\" \n      Poultry          Fish     Margarine       Cabbage        Carrot \n    \"numeric\"     \"numeric\"     \"numeric\"     \"numeric\"     \"numeric\" \nlow_fat_Dairy    Vegetables \n    \"numeric\"     \"numeric\" \n\n$check_class_table\ncheck_class_vector\n factor numeric \n      1      16 \n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that in the given data, \"HFI\"(Healthy Food Index) is a factor variable and \"BSDS\"(the Baltic Sea Diet Score) is a numeric variable. You could use table(FoodData$HFI) and table(FoodData$BSDS) to check the difference."
  },
  {
    "objectID": "complex_code.html#check-sanities-for-variables",
    "href": "complex_code.html#check-sanities-for-variables",
    "title": "Tutorial(complex) - Code",
    "section": "\n3.4 Check sanities for variables",
    "text": "3.4 Check sanities for variables\nTo check for missing (NA) or abnormal values (e.g., NaN, negative values, infinite values, blank values) in each variable, you can use the checkdata() function. This function generates a summary table for each data frame, showing the number of observations containing NA, NaN, zero, negative, infinite (Inf), and blank values, along with their percentages.\n\nShow the codeif (!require(kableExtra)) {\n  install.packages(\"kableExtra\")  # Install the package if it's not available.\n\n}\nlibrary(kableExtra)             # Load it after installation.\n\n\n\nShow the codekable(ClinData_check$everycolumn)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nID\nT2D\nPairedInfo\nEnergy\nGender\nAge\nBMI\nSmoking\nPhysicalActivityIndex\nEducation\nFastingGlucose\n\n\n\nNA_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nNA_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nNaN_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nNaN_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nnegative_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nnegative_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nzero_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nzero_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\ninf_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\ninf_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nblank_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nblank_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n\n\nShow the codekable(MetaboliteData_check$everycolumn)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPipecolic.acid.betaine\nlysoPC.18.0.\nHP143.1179.1.55\nlysoPE.22.6.\nHN151.0065.4.97\nRP225.1482.9.15\nX3.4.5.Trimethoxycinnamic.acid\nDHA\nRP383.1671.10.53\ngama.tocopherol\nRP431.3516.11.96\nRP490.3516.8.99\nlysoPC.22.6.\nSteroid.glucuronide\nRP684.5545.13.41\nRP197.0926.3.17\nRP303.6468.9.98\nRP816.5684.12.52\nRP827.5356.11.88\nRP826.5442.12.17\nRN201.1498.8.23\nRN203.0022.3.00\nEPA\nPC.18.2.15.0.\nRN814.5610.12.14\nRN153.0190.3.5\nRN427.1641.10.59\nRN457.1742.10.50\nRN830.5845.12.46\nRN446.1541.10.59\nRN472.1596.10.53\n\n\n\nNA_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nNA_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nNaN_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nNaN_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nnegative_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nnegative_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nzero_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nzero_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\ninf_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\ninf_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nblank_number\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nblank_percentage\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n\n\nShow the codekable(FoodData_check$everycolumn)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHFI\nBSDS\nWholegrains\nSausage\nPizza\nRefined.bread\nFruits\nLiquor\nWine\nHamburger\nPoultry\nFish\nMargarine\nCabbage\nCarrot\nlow_fat_Dairy\nVegetables\n\n\n\nNA_number\n0\n0\n0.000\n0.000\n0.000\n0.000\n0.00\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n\n\nNA_percentage\n0\n0\n0.000\n0.000\n0.000\n0.000\n0.00\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n\n\nNaN_number\n0\n0\n0.000\n0.000\n0.000\n0.000\n0.00\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n\n\nNaN_percentage\n0\n0\n0.000\n0.000\n0.000\n0.000\n0.00\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n\n\nnegative_number\n0\n0\n0.000\n0.000\n0.000\n0.000\n0.00\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n\n\nnegative_percentage\n0\n0\n0.000\n0.000\n0.000\n0.000\n0.00\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n\n\nzero_number\n0\n0\n63.000\n139.000\n195.000\n155.000\n180.00\n367.000\n288.000\n231.000\n117.000\n79.000\n41.000\n253.000\n225.000\n237.000\n192.000\n\n\nzero_percentage\n0\n0\n0.063\n0.139\n0.195\n0.155\n0.18\n0.367\n0.288\n0.231\n0.117\n0.079\n0.041\n0.253\n0.225\n0.237\n0.192\n\n\ninf_number\n0\n0\n0.000\n0.000\n0.000\n0.000\n0.00\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n\n\ninf_percentage\n0\n0\n0.000\n0.000\n0.000\n0.000\n0.00\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n\n\nblank_number\n0\n0\n0.000\n0.000\n0.000\n0.000\n0.00\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n\n\nblank_percentage\n0\n0\n0.000\n0.000\n0.000\n0.000\n0.00\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n0.000\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nYou shall only continue to use the data when the class of variables are correct and the missing or abnormal values in the variable are properly handled."
  },
  {
    "objectID": "complex_code.html#build-data-for-analysis",
    "href": "complex_code.html#build-data-for-analysis",
    "title": "Tutorial(complex) - Code",
    "section": "\n3.5 Build data for analysis",
    "text": "3.5 Build data for analysis\nWe treat food variables as our exposures and BMI and type 2 diabetes as outcomes. Note that BMI is a continuous variable. We can additionally construct BMI as a categorical outcome using the following criteria:\n\nBMI &lt;= 18.5: Underweight\n18.5 &lt;BMI &lt;= 25: Normal\n25 &lt; BMI &lt;= 30: Overweight\n30 &lt; BMI: Obese\n\n\nShow the codeBMI &lt;- ClinData[,\"BMI\"] \n\nBMI_cat &lt;- cut(BMI,  \n               breaks = c(-Inf, 18.5, 25, 30, Inf),  \n               labels = c('underweight', 'normal', 'overweight', 'obese'),  \n               right = TRUE) \n\n\nWe want to explore the exposure-outcome relationships through the metabolomics data, using metabolites as assumed mediators. Food data serves as exposures, while BMI (both continuous and categorical) and Type 2 Diabetes are treated as outcomes. Gender, age, education, physical activity, and smoking are used as potential confounders for the exposure-mediator and mediator-outcome associations. Additionally, auxiliary information regarding case-control matches, fasting glucose levels, education, and physical activity is provided to enhance the analysis.\n\nShow the codeexposure2 &lt;- FoodData\nOmics2 &lt;- MetaboliteData\noutcome2 &lt;- cbind.data.frame(ClinData[,c(\"T2D\",\"BMI\")], BMI_cat)\ncovariates2 &lt;- ClinData[, c(\"Gender\" ,\"Age\",\"Education\",\"PhysicalActivityIndex\",\"Smoking\" )]\nauxiliary2 &lt;- ClinData[, c(\"PairedInfo\",\"FastingGlucose\",\"Education\",\"PhysicalActivityIndex\", \"Energy\")]"
  },
  {
    "objectID": "complex_code.html#simple_link",
    "href": "complex_code.html#simple_link",
    "title": "Tutorial(complex) - Code",
    "section": "\n4.1 Step 1: PCA/WGCNA plots",
    "text": "4.1 Step 1: PCA/WGCNA plots\nUsing TriplotGUI package, first we perform dimension reduction, using weighted correlation network analysis (WGCNA) on metabolomics data.\n\nShow the code# Using the complex settings\nreduced_Omics2 &lt;- OmicsReduction(dataframe = Omics2,\n                                   plotType = c(\"scree\",\"score\",\"loading\",\"scoreloading\"),\n                                   pcType = \"principal\", \n# Users can choose freely to use principal() instead of prcomp() to perform PCA.The result should be very similar, but principal() allows more functionalities\n                                   firstPC = 1,\n                                   secondPC= 2,\n                                   option = \"WGCNA\",\n# In this example we use WGCNA to perform data reduction, therefore specifying `option=\"WGCNA\"`.\n                                   scale = TRUE,\n                                   center = TRUE,\n                                   eigenLoading = \"loading\",\n# If you want to show loading or scale it to eigevalues.\n                                   rotate = \"none\",\n# This argument is inherited from the principal() function\n                                   sizeVariable = auxiliary2$FastingGlucose,\n                                   sizeVariableName = \"FastigGlucose\",\n                                   colorVariable = auxiliary2$Education,\n                                   colorVariableName = \"Education\",\n                                   shapeVariable = auxiliary2$PhysicalActivityIndex,\n                                   shapeVariableName = \"PhysicalActivityIndex\",\n# The size,shape,color variables are used to differentiate points on the score plot and biplot \n                                   loadingsName = TRUE,\n# Show the names of loadings\n                                   loadingsCutpercent = 0.2,\n# The loadings bigger than 20% of all the loadings will show up\n                                   minModuleSize = 3\n# The mimimum number of variable in each cluster of WGCNA\n)\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nIn WGCNA, Omics variables are grouped into clusters. PCA is performed on each cluster, and the first principal component of each cluster is used as the module for WGCNA.\nYou could try out the arguments of the OmicsReduction() function to visualize the results and view the whole function here\n\nThe minModuleSize argument in OmicsReduction() is crucial as it defines the minimum number of variables in each cluster. Setting this too high may result in all variables being grouped into a single cluster. For instance, with 20 variables and minModuleSize=15, you might end up with one cluster containing all 20 variables. In this case, only the first principal component of this single cluster would be used and displayed on both axes of the resulting triplots.\nTo avoid this, adjust minModuleSize based on your total variable count and desired cluster granularity. Experiment with different values to achieve a balance between meaningful clusters and interpretable results.\n\n\n\n\nYou can see scree plot, score plot, loadings plot and biplot at this stage.\n\nShow the codereduced_Omics2$scree_plot\n\nplot\n\n\n\n\n\n\n\n\nThe scree plot in WGCNA visualizes the variance explained by each cluster. Clusters are color-coded, with column heights representing the proportion of total variance explained by each cluster. The darker color in each column shows the variance explained by the first principal component (module) of that cluster.\nThe grey cluster, showing only a darker color, indicates it contains just one variable, which serves as its own first principal component/module. This can occur even with minModuleSize=2, as some variables may be left unclustered.\nClusters are arranged from left to right based on the number of variables they contain, with the leftmost cluster having the most variables and the rightmost having the least. This arrangement helps in quickly identifying the relative sizes and importance of different clusters in the dataset.\n\nShow the codereduced_Omics2$score_plot\n\nplot\n\n\n\n\n\n\n\n\nIn the score plot, observations are colored by education level, with different shapes representing varying physical activity indices and different sizes indicating fasting glucose levels. This visualization allows for an integrated view of how these characteristics relate to the modules derived from the WGCNA analysis, highlighting patterns among individuals based on their traits.\n\nShow the codereduced_Omics2$loading_plot\n\nplot\n\n\n\n\n\n\n\n\nThe loading plot displays loadings aligned along the axes, reflecting the use of first principal components/modules from each cluster in WGCNA. This alignment occurs because each axis represents a distinct principal component analysis, making it impossible for loadings to point in the direction of another axis.\n\nShow the codereduced_Omics2$scoreloading_plot\n\nplot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nSometimes the following text will show up in your console and the figure cannot be directly run:\nlibpng warning: Image width is zero in IHDR\nlibpng error: Invalid IHDR data\nWarning message:\nIn dev.off(which) : agg could not write to the given file\\\nRun gc() in your console to clear the memory. Then rerun the code again to view the figure.\n\n\nAlthough informative, the biplot combining both score and loading can appear cluttered due to the high density of information it contains.\nA TPObject is constructed based on the data reduction results from the WGCNA analysis. This object serves as a central repository for storing and trandfering information generated through the various steps during the analysis.\n\nShow the codescores &lt;- reduced_Omics2$object$scores\nloadings &lt;- reduced_Omics2$object$loadings\nvariance &lt;- reduced_Omics2$object$variance\nTPObject1 &lt;- makeTPO(scores = scores,\n                     loadings = loadings,\n                     variance = variance)\n\n\nMaking TriPlotObject (TPO)\n--------------------------\n\nScore matrix has 1000 observations and 5 components.\n\nTPO has 0 attached correlations.\nTPO has 0 attached risks."
  },
  {
    "objectID": "complex_code.html#step-2-3-exposure-correlations-outcome-associations",
    "href": "complex_code.html#step-2-3-exposure-correlations-outcome-associations",
    "title": "Tutorial(complex) - Code",
    "section": "\n4.2 Step 2-3: Exposure correlations & Outcome associations",
    "text": "4.2 Step 2-3: Exposure correlations & Outcome associations\nThe correlations between modules and food items and the associations between modules and risk markers can be then calculated, with confounders adjusted. Note that it is possible for users to skip code regarding correlations or risk association, if their interests focus on only outcome associations or exposure correlations with Omics variables.\nThe modules information saved in the TPObject can be directly utilized in the exposureAssociation() function. This function calculates correlation coefficients and p-values between the modules and exposures (food variables and diet scores), while adjusting for specified confounders.\n\nShow the codeCorrelations_object &lt;- exposureAssociation(TPObject = TPObject1,\n                                exposure = exposure2,\n                                use = 'pairwise', \n                                # use inherit from cor() function \n                                method = 'pearson',\n                                # method inherit from cor() function \n                                allowCategorical = FALSE,\n                                # one-hot-encoding on categorical exposures\n                                partial = TRUE,\n                                # perform confonder adjustment\n                                confounder = covariates2)\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\nThe exposureAssociation() function offers options for handling categorical variables and adjusting for confounders. When setting allowcategorical=FALSE, categorical exposures with more than two classes undergo one-hot-encoding, transforming them into binary variables. This can be verified by examining Correlations_object$cor_estimate, which shows separate correlation coefficients for each binary representation of HFI levels. However, allowcategorical=FALSE is limited for meaningful use. The binary variables may be only meaningful when we want to compare one level to all the other levels together. We use this option for categorical variable \"HFI\" for demonstration purpose. Ideally, one should use allowcategorical=TRUE for HFI.\nConversely, allowcategorical=TRUE leaves categorical variables like \"HFI\" untransformed. In this case, linear models regressing modules on \"HFI\" are used for correlation analysis. The correlation coefficients are derived from the square root of the proportion of HFI’s sum of squares to the total sum of squares.\n\nSetting partial=TRUE ensures that specified confounders are adjusted for in the correlation analysis.\n\n\n\nThe correlation results obtained from the exposureAssociation() function are then incorporated into the TPObject.\n\nShow the codeTPObject2 &lt;- addExposure(TPObject = TPObject1,\n                     corrEstimate = Correlations_object$cor_estimate,\n                     corrPvalue = Correlations_object$cor_pvalue)\n\n\nAdding correlation to TPO\n-------------------------\n\nTPO has 23 attached correlations.\nTPO has 0 attached risks.\n\n\nThe modules information saved in the TPObject can be directly utilized in the outcomeAssociation() function. This function calculates risk estimates and p-values between the modules and outcomes (BMI, type 2 diabetes and categorical BMI), while adjusting for specified confounders.\n\nShow the codeRisks_object &lt;- outcomeAssociation(TPObject = TPObject2,\n                                outcome = outcome2,\n                                confounder = covariates2,\n                                partial = TRUE,\n                                # performs confounder adjustment\n                                multinomial = TRUE,\n                                # multinomial regression is used\n                                pair = auxiliary2$PairedInfo,\n                                # use the pairing information of case and control\n                                CI = 0.95\n                                # confidence interval\n                                )\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe outcomeAssociation() function offers various options for handling outcomes and adjusting for confounders, with behavior differing based on whether pair information is provided.\n\nWithout pair information:\n\n\nmultinomial=FALSE transforms categorical outcomes with &gt;2 classes into binary variables via one-hot-encoding. Logistic regression is used for binary outcomes, and linear regression for continuous outcomes.\n\nmultinomial=TRUE applies multinomial regression to categorical outcomes with &gt;2 classes, yielding n-1 estimates. Binary and continuous outcomes are handled as before.\n\n\nWith pair information:\n\n\nmultinomial=FALSE transforms categorical outcomes as above, then uses conditional logistic regression for binary outcomes and linear mixed models for continuous outcomes, incorporating pairing information.\n\nmultinomial=TRUE ignores pairing information, applying multinomial regression to categorical outcomes and standard logistic/linear regression to binary/continuous outcomes.\n\n\nSetting partial=TRUE ensures adjustment for specified confounders in all analyses.\n\n\n\nThe results for risk estimates obtained from the outcomeAssociation() function are then incorporated into the TPObject.\n\nShow the codeTPObject3 &lt;- addOutcome(TPObject = TPObject2, \n                     Risk = Risks_object)\n\n\nAdding risk to TPO\n------------------\n\nTPO has 23 attached correlations.\nTPO has 5 attached risks."
  },
  {
    "objectID": "complex_code.html#step-4-triplot",
    "href": "complex_code.html#step-4-triplot",
    "title": "Tutorial(complex) - Code",
    "section": "\n4.3 Step 4: Triplot",
    "text": "4.3 Step 4: Triplot\nThe TPObject created from all steps can be used to generate a Triplot using the TriplotGUI() function. The function serves as a wrapper for PCA_TriplotGUI() and WGCNA_TriplotGUI(). You can check the functions respectively here: TriplotGUI(), PCA_TriplotGUI(), WGCNA_TriplotGUI().\n\nShow the codeTPO_plots3 &lt;- TriplotGUI(TPObject3,\n                              firstPC = 1, ## The first PC to map\n                              secondPC = 2, ## The first PC to map\n                              plotLoads = TRUE, ##Whether to plot loadings (TRUE; default) or suppress them (FALSE)\n                              plotScores = FALSE, ##Whether to plot scores (TRUE) or suppress them (FALSE; default)\n                              plotCorr = TRUE, ##Whether to plot correlations (TRUE; default) or suppress them (FALSE)\n                              plotRisk = TRUE, ##Whether to plot risk estimates (TRUE; default) or suppress them (FALSE)\n                              ###############################################\n                              ##For loadings\n                              loadLabels = TRUE, ###Whether to plot variable loading labels (TRUE; default) or not (FALSE)\n                              loadArrowLength = 0.02, ###Length of arrow tip , set it as 0 if you want to remove it\n                              loadCut = 0, ###lower limit Loadings below the cut are plotted in light grey and without label\n                              loadLim = NULL, ##higher limit,Plot range for loadings\n                              ###############################################\n                              ##For correlations\n                              colCorr = \"blue\", ##Color vector for correlations\n                              pchCorr = 16, ##Plotting character for correlations\n                              whichCorr = NULL, ##Which correlations to plot (vector of numbers)\n                              corLim = NULL, ##Plot range for correlations\n                              corrLabels = TRUE, \n                              ###############################################\n                              ##For risks\n                              colRisk = \"red\", ##Color vector for risk estimates\n                              pchRisk = 15, ##Plotting character for risk estimates\n                              whichRisk = NULL, ##Which risk estimates to plot (vector of numbers)\n                              riskLim = NULL, ##Plot range for risks\n                              riskWhiskerPercentage = 0.1, ## whisker length is how many percentage of confidence interval\n                              riskLabels = TRUE, size = 3, # the size of points ont he plot\n                              riskOR = TRUE\n                              # plot the risk estimates as odds ratio\n                              )\n\n\nWe then visualize the triplot.\n\nShow the codeTPO_plots3$triplot\n\nplot\n\n\n\n\n\n\n\n\nIn the triplot visualization, black arrows represent loadings of Omics variables, forming patterns in different modules (axes). Blue circle points show exposure correlations with the modules, while red square points indicate outcome associations with the modules.\n\n\n\n\n\n\nNote\n\n\n\nNote that we use first and second module for our example here. In reality, you may use the checkTPO() function in TriplotGUI to view which modules may be more of your interest (that are associated with specific exposures and outcomes).\n\n\nBased on the triplot visualization of the TriplotGUI interface, we can interpret the following key points:\n\nThe first (top right) and third (bottom left) dimension generally represents a spectrum of dietary healthiness. Healthier foods (e.g., \"Fruits\", \"Vegetables\") and higher healthy food indices (\"HFI\", \"BSDS\") are positioned on one side in the first dimension, while less healthy foods (e.g., \"Hamburger\", \"Sausage\", \"Margarine\") are on the opposite side in the third dimension.\nThe second (top left) and fourth (bottom right) dimensions are associated with health outcomes, including the numeric outcome \"BMI\", binary outcome \"T2D\", and one-hot-encoded categorical \"BMI_cat\" outcome.\n\nExplanation for some variables in the plot:\n\n\n\"HFI\" stands for healthy food index. A higher \"HFI\" suggests healthier diet. \"HFI\" ranges from 0 to 6. You can see that there are HFI_0, HFI_1…HFI_6 in the figure and that is because \"HFI\" is used as a factor exposure variable in exposure’s correlation and is one-hot-encoded to the same number of binary variables as its number of levels. For example, HFI_6 is a binary variable where individuals with \"HFI\" as 6 (most healthy diet people) will be labeled as 1 and the rest of individuals will be labelled as 0. HFI_0 is a binary variable where individuals with \"HFI\" as 0 (most unhealthy diet people) will be labeled as 1 and the rest of individuals will be labelled as 0. HFI_1…HFI_5 has limited use since it only separates the group of people with certain \"HFI\" value from to the rest, which is a mixture of people with healthier and less healthier diet.\n\n\"BSDS\" stands for Baltic Sea Diet Score ranging. A higher \"BSDS\" suggests healthier diet. \"BSDS\" is used as a numeric variable ranging from 2 to 25 in the correlation.\n\nBMI_cat_obese, BMI_cat_overweight, BMI_cat_underweight are the odds ratio generated from the multinomial regression, since \"BMI_cat\" is a categorical outcome and multinomial regression is performed in outcome’s association in this example. Normal weight is uses as a reference and odds ratio of obese, overweight and underweight is produced. (Note that the first level of the factor variable is set as the default reference, in this case it is normal).\n\n\nAdjusting for \"Age\", \"Gender\", \"Smoking\", \"Education\" and \"FastingGlucose\", the first module (on x-axis) correlates positively with generally healthy food (e.g. \"fruits\", \"vegatables\") and food index (e.g. \"BSDS\") and negatively with unhealthy food (e.g. \"Hamburger\", \"pizza\"). It also reversely associated with \"T2D\" and \"BMI\". From the result from \"BMI_cat\", this components also reversely associated with being obese.\nAdjusting for \"Age\", \"Gender\", \"Smoking\", \"Education\" and \"FastingGlucose\", the second module (on y-axis) associated positively with generally healthy food (e.g. \"fruits\", \"vegatables\") and food index (e.g. \"BSDS\") and negatively with unhealthy food (e.g. \"Hamburger\", \"pizza\"). However, the module correlates also positively with \"T2D\",\"BMI\", obese, overweight and negatively associated with underweight.\n\nBased on what we summarized above, the two modules may be associated with a overall healthy eating pattern. And in this healthy eating pattern, the first module is associated more with the beneficial effect on health and the second module represents the adverse health effect."
  },
  {
    "objectID": "complex_code.html#step-5-mediation-analysis-and-visualization",
    "href": "complex_code.html#step-5-mediation-analysis-and-visualization",
    "title": "Tutorial(complex) - Code",
    "section": "\n4.4 Step 5: Mediation analysis and visualization",
    "text": "4.4 Step 5: Mediation analysis and visualization\nIn mediation analysis in TriplotGUI, we focus on a specific set of variables for mediation analysis: we select \"BSDS\" (Baltic Sea Diet Score) and \"Hamburger\" as our exposures, \"BMI\" and \"T2D\" as outcome to enter our next step. We choose first and second modules as our mediators.\nThis time, we perform the mediation analysis with the getMediationCounterfactual() function, using the counterfactual/potential outcome method implemented through the mediation package in R on our exposures (i.e. \"BSDS\", \"Hamburger\"), mediators (i.e. the first and second modules) and outcome (i.e. \"T2D\", \"BMI\") of interest, adjusting for \"Age\", \"Gender\", \"Smoking\", \"Education\" and \"FastingGlucose\" for both exposure-mediator and mediator-outcome relationship.\n\nShow the codemediation_object3 &lt;- \n  getMediationCounterfactual (mediator = TPObject3$scores[,c(1:2),drop = FALSE], \n                             # Specfiying at least 2 components so that there can be a 2-dimensional plot\n                               exposure=exposure2[,c(\"Hamburger\",\"BSDS\"),drop = FALSE],\n                             outcome = outcome2[,c(\"BMI\",\"T2D\"),drop = FALSE],\n                             exposureTreatment = c(25,19),\n                             exposureControl = c(2,0),\n                             confounderME = covariates2,\n                             confounderOE = covariates2)\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn the counterfactual mediation analysis, contrast values of treatment and controls for each exposure needs to be specified. For each individual, the analysis considers what would happen if they received the treatment versus if they received the control. In brief, the algorithm uses these contrast values to calculate the potential outcomes under each scenario to estimate the direct and indirect effects. For a detailed explanation please refer to this paper of the mediation R package.\nIf an exposure variable is continuous (numeric variable), it is recommended that the treatment and control contrast values are chosen between the range of the exposure variable. If an exposure variable is categorical (factor variable), the treatment and control contrast values should be chosen from the levels of the exposure variable.\n\n\nThen we can also Look at the barplot for mediations, which provides a clear visual representation of the direct, indirect, and total effects for each combination of exposure, mediator (principal component), and outcome. This visualization allows for a more intuitive understanding of the mediation analysis results.\n\nShow the codemediation_plots3 &lt;- mediationBarplot(mediationObject = mediation_object3,\n                                         cex = 2#,\n                                         # size of the text\n                                         #by_row = \"one_column\"\n                                         )\n\n\n\nShow the codemediation_plots3\n\nplot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe barplot displays direct, indirect, and total effects for each exposure-mediator-outcome combination, offering a convenient tool to assess the direction and magnitude of mediation estimates.\n\nColor coding enhances interpretation: red indicates significant positive effects (p&lt;0.05), blue shows significant negative effects (p&lt;0.05), and grey represents insignificant effects.\nSignificance levels are denoted by stars: one star for p&lt;0.05, two stars for p&lt;0.01, and three stars for p&lt;0.001.\n\n\n\nAdd the mediation result from getMediationCounterfactual() into the TPObject.\n\nShow the codeTPObject4 &lt;- addMediation(TPObject = TPObject3, \n                          mediationObject = mediation_object3)\n\n\nAdding mediation to TPO\n-------------------------\n\nTPO mediation has used 2 mediators, 2 exposures, 2 outcomes\nMediators are turquoise, blue \nExposures are Hamburger, BSDS \nOutcomes are BMI, T2D\n\n\nTo create the triplot with mediation, use the provided function with its default arguments. This will generate a visualization that incorporates the mediation analysis results into the triplot framework. You can adjust these arguments as needed to customize the appearance and content of the triplot.\n\nShow the codeTPO_plots4 &lt;-\n  mediationTriplot(\n    TPObject4,\n    show = c(\"APM\",\"PM\"),\n    ##Which mediation estimate to show\n    firstPC = 1,\n    ##The first PC to map\n    secondPC = 2,\n    ##The second PC to map\n    plotMed = TRUE,\n    ##Whether to plot mediation estimates (TRUE; default) or suppress them (FALSE)\n    plotCorr = TRUE,\n    ##Whether to plot correlations (TRUE; default) or suppress them (FALSE)\n    plotRisk = TRUE,\n    ##Whether to plot risk estimates (TRUE; default) or suppress them (FALSE)\n    ###############################################\n    ##For correlations\n    colCorr = \"blue\",\n    ##Color vector for correlations\n    pchCorr = 16,\n    ##Plotting character for correlations\n    corrLim = NULL,\n    ##Plot range for correlations\n    corrLabels = TRUE,\n    ##Add labels on exposures\n    ###############################################\n    ##For risks\n    colRisk = \"red\",\n    ##Color vector for risk estimates\n    pchRisk = 15,\n    ##Plotting character for risk estimates\n    riskLim = NULL,\n    ##Plot range for risks\n    whiskerPercentageRisk = 0.1,\n    ##whisker length is how many percentage of confidence interval\n    riskLabels = TRUE,\n    ##Add labels on outcomes\n    riskOR = TRUE,\n    #plot the risk estimates as odds ratio\n    ###############################################\n    ##For mediations\n    colmed = \"darkgreen\",\n    ##Color vector for mediation estimates\n    pchmed = 17,\n    ##Plotting character for mediation estimates\n    medLim = NULL,\n    ##Plot range for mediations\n    whiskerPercentageMediation= 0.1,\n    ##whisker length is how many percentage of confidence interval\n    medLabels = TRUE,\n    ##Add labels on mediation estimates\n    #########################################\n    \n    size = 3\n    # the size of points ont he plot\n  )\n\n\nOnly showing the mediation results.\n\nShow the codeTPO_plots4$mediations_plot\n\nplot\n\n\n\n\n\n\n\n\nThe mediationTriplot() function displays only the proportion mediated (PM) and adjusted proportion mediated (APM) as dark green triangle points due to the specified show = c(\"PM\", \"APM\") argument.\nTo reduce visual clutter, you can separate these by running the function twice: once with show = c(\"PM\") and once with show = c(\"APM\").\n\nShow the codeTPO_plots4 &lt;-\n  mediationTriplot(\n    TPObject4,\n    show = c(\"PM\")\n  )\n\n\n\nShow the codeTPO_plots4$mediations_plot\n\nplot\n\n\n\n\n\n\n\n\nFour green triangles are displayed on the figure. Their x and y coordiates represent the eight combinations of exposures, mediators and outcomes.\n\nexposure=BSDS, mediator= module 1, outcome=BMI\nexposure=BSDS, mediator= module 2, outcome=BMI\nexposure=Hamburger, mediator= module 1, outcome=BMI\nexposure=Hamburger, mediator= module 2, outcome=BMI\nexposure=BSDS, mediator= module 1, outcome=T2D\nexposure=BSDS, mediator= module 2, outcome=T2D\nexposure=Hamburger, mediator= module 1, outcome=T2D\nexposure=Hamburger, mediator= module 2, outcome=T2D\n\nWe can see from the confidence intervals that some PM values are not significant, with large intervals pushing triangle points towards the origin. To better examine these points and their dimensions, we zoom in by adjusting the limit of the proportion mediated. Setting \"medLim = 2.5\" restricts the plot’s range from -2.5 to 2.5, allowing for a closer inspection of the points and their relationships within this more focused area\n\nShow the codeTPO_plots4 &lt;-\n  mediationTriplot(\n    TPObject4,\n    show = c(\"PM\"),\n    medLim = 2.5\n  )\n\n\n\nShow the codeTPO_plots4$mediations_plot\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_errorbarh()`).\n\n\nplot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nConfidence intervals are automatically removed from the figure if they fall outside the set limits.\nIn certain mediations, the direct and indirect effects may have opposite directions. This can result in a proportion mediated (PM) greater than 1. This occurs because the total effect might be smaller than the indirect effect.\n\n\n\nBased on the figure showing the mediation analysis results, we can observe the direction and magnitude of proportion mediated for the 2 mediators (module 1 and 2), all the exposures and outcomes. Based on the confidence interval, we also observed that the PM for BSDS-module 1-BMI and BSDS-module 2-BMI mediation is significant.\nTo further examine the mediation results, we look at the adjusted proportion mediated (APM):\n\nShow the codeTPO_plots4 &lt;-\n  mediationTriplot(\n    TPObject4,\n    show = c(\"APM\")\n  )\n\n\n\nShow the codeTPO_plots4$mediations_plot\n\nplot\n\n\n\n\n\n\n\n\nBy observing this figure, we can see the direction and magnitude of adjusted proportion mediated (APM) for the two mediators across all exposures and outcomes. The positioning of the points is similar to what we observed for the proportion mediated (PM).\nNotably, the APM for BSDS (Baltic Sea Diet Score) as the exposure and T2D (Type 2 Diabetes) as the outcome is smaller than their corresponding PM. This difference occurs because the indirect and direct effects for this mediation pathway are of similar size but in opposite directions. This opposition leads to a smaller total effect and consequently a larger PM. However, the APM is not affected by the directionality of the direct and indirect effects, providing a more stable measure of mediation.\n\n\n\n\n\n\nNote\n\n\n\n\nNo confidence intervals are shown for APM. This is because APM values cannot be directly calculated from the mediation analysis in the mediation R package, unlike the proportion mediated (PM).\nThe APM is always smaller than 1, even when direct and indirect effects are in opposite directions. This is due to the calculation method of APM, which uses the sum of the absolute values of indirect and direct effects as the denominator. \\[APM=\\frac{IE}{|IE|+|DE|}\\cdot\\frac{|IE+DE|}{IE+DE}=\\frac{IE}{IE+DE}\\cdot\\frac{|IE+DE|}{|IE|+|DE|}=\\frac{IE}{|IE|+|DE|}\\cdot\\frac{IE+DE}{|IE+DE|}\\]\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nSpecifying show = c(\"PM\", \"APM\", \"IE\", \"TE\") in the mediationTriplot() function would display all estimates, including indirect effect (IE) and total effect (TE). However, this is not recommended as it can overcrowd the plot, making it difficult to interpret.\nFor a clearer visualization, it’s better to view IE and TE separately. The Tutorial(simple) section provides examples of plots showing \"IE\" and \"TE\", offering a more manageable and interpretable view of these mediation components.\n\n\nPlot the triplot with mediation,\n\nShow the codeTPO_plots4$mediations_triplot\n\nplot\n\n\n\n\n\n\n\n\nBased on the barplot and the triplot with mediation, we’ve observed significant proportion mediated for BSDS-module 1/2-BMI mediations. Further exploration on indirect, direct and total effect of the mediation analysis could be explored by playing around the show argument in the mediationTriplot() function. We will not go into details here."
  },
  {
    "objectID": "complex_code.html#comparative-visualization",
    "href": "complex_code.html#comparative-visualization",
    "title": "Tutorial(complex) - Code",
    "section": "\n4.5 Comparative Visualization",
    "text": "4.5 Comparative Visualization\nThe checkTPO() function in TriplotGUI allows users to generate heatmaps from the TPObject to visualize correlations, risk estimations, and mediation results.\n\nShow the codecheckTPObject4 &lt;- checkTPO(TPObject4,\n                                  mediatorEstimates = c(\"IE\",\"TE\",\"PM\",\"APM\"),\n                                  ## What type of mediation estimate or proportion mediated to show on the heatmap\n                                  mediators = c(\"turquoise\", \"blue\"),\n                                  ## What mediators (principal component) you want to show\n                                  exposures = c(\"Hamburger\",\"BSDS\"),\n                                  ## What exposure variables you want to show\n                                  outcomes = c(\"T2D\",\"BMI\")\n                                  ## What outcome variables you want to show\n                                  )\n\n\nCorrelation coefficients and p values between modules and exposures:\n\nShow the codecheckTPObject4$corr_coefficients\n\nplot\n\n\n\n\n\n\n\n\nRisk estimates(beta coefficients) and p values between modules and outcomes:\n\nShow the codecheckTPObject4$risk_coefficients\n\nplot\n\n\n\n\n\n\n\n\nMediation estimates and p values for indirect effect(IE) and total effect(TE), proportion mediated(PM) and adjusted proportion mediated(APM): Read Manual for more details:\n\nShow the codecheckTPObject4$med_coefficients\n\nplot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nSignificance is indicated as follows. One star for p&lt;0.05; Two stars for p&lt;0.01; Three stars for p&lt;0.001.\nThe first two plots, correlation coefficients with exposures and risk estimates of outcomes will show all the exposure and outcome variables that are not removed from visualization.\nNote that in the plot of checkTPbject4$med_coefficients, nly the selected exposures, mediators and outcomes that we use to do mediation on will show up in the mediation results. The rows in the heatmaps are mediators and the column represents exposure-outcome pairs. For each exposure-outcome pair, 4 results are shown: IE (indirect effect), TE (total effect), PM(Proportion Mediated) and APM(Adjusted Proportion Mediated). Please read Manual for more information. The “CF” before the names of exposures-outcome pairs means that this mediation is using the Counterfactual method."
  },
  {
    "objectID": "complex_code.html#data-download",
    "href": "complex_code.html#data-download",
    "title": "Tutorial(complex) - Code",
    "section": "\n4.6 Data download",
    "text": "4.6 Data download\nTo save all your output, including data, results, and visualization output as an .rda file, you can use the save() function as an rda file.\n\nShow the codesave(exposure2,Omics2,outcome2,covariates2,auxilariy2,\n     reduced_Omics2,Correlations_object,Risks_object,\n     mediation_object3,mediation_plots3,\n     TPObject1,TPObject2,TPObject3,TPObject4,\n     checkTPObject4,\n     \"Tutorial_complex_output.rda\")\n\n\n0"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TriplotGUI",
    "section": "",
    "text": "This page provides an overview of the tabs in the navigation bar, each representing a key section of the TriplotGUI website tutorial.\n\n\nIntroduction\nThis section offers a concise overview of the research background, methodology, results, and conclusions, as well as the design principles behind TriplotGUI.\n\n\nSetup\nHere, users will find step-by-step instructions for installing TriplotGUI as a standalone application in RStudio and activating its graphical user interface.\n\n\nManual\nThe manual section provides comprehensive guidance for using TriplotGUI. Users can follow detailed explanations to customize their analyses and visualizations. This section focuses on functionality rather than interpretation of results.\n\n\nTutorial(simple)\nThis section presents a basic example of using TriplotGUI, utilizing the CAMP_2 dataset. It offers two approaches: - Code tutorial: Suitable for users with beginner-level R skills - User interface tutorial: Ideal for those with limited epidemiology knowledge and experience in handling high-dimensional data\n\n\nTutorial(complex)\nA more advanced example using the HealthyNordicDiet_2 dataset, with two options: - Code tutorial: Tailored for intermediate to advanced R users - User interface tutorial: Designed for users with epidemiology knowledge and experience in working with high-dimensional data\n\n\n\n\n\nPaper\nThis section showcases relevant papers related to TriplotGUI and includes a viewable poster presentation.\n\n\nAbout us\nA list of contributors to the TriplotGUI project is provided here.\n\n\nContact us\nFor inquiries about TriplotGUI or potential collaborations, users are directed to contact yingxiao@chalmers.se"
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "Overview\nTriplotGUI is an innovative tool designed to address the challenges of analyzing and interpreting complex relationships between exposures, omics data, and health outcomes in large-scale epidemiological studies. Here’s an overview of its key features and capabilities:\nBackground&aim: Exposure- and outcome-wide studies aim to identify potential risk factors and their health effects on a broader scale. While Omics technologies have enabled linking exposome to outcomes, there’s often a lack of large-scale exploration of mediating mechanisms. This gap exists due to the high-dimensional nature of Omics data and the absence of effective tools for interpreting complex relationships. TriplotGUI was developed to advance exposure-risk assessment and facilitate the interpretation of these complex associations via omics profiles.\nMethods: TriplotGUI employs several key analytical approaches. First, Omics variables are reduced to components using methods such as Principal Component Analysis (PCA) or Weighted Correlation Network Analysis (WGCNA). These components are then associated with both exposures and outcomes through linear models. To investigate potential mediators, TriplotGUI utilizes a “meet-in-the-middle” analysis that intersects exposure-Omics and Omics-outcome associations, along with mediation analysis. The tool supports both classical (Baron-Kenny) mediation and counterfactual mediation, while also allowing for adjustment for covariates.\n\nResults: Among its various functionalities, TriplotGUI co-visualizes omics variable contributions, exposure-omics associations, omics-outcome associations, and direct and indirect effects from mediation analysis. By centering analyses around molecular data, TriplotGUI enables the simultaneous assessment of multiple exposures and outcomes. Users can conveniently perform analyses and visualizations through a web-based version of TriplotGUI or install it as a stand-alone application in RStudio, making it suitable for secure environments in compliance with GDPR. Please read the Setup session for more about installation.\nTriplotGUI has been tested using both synthetic and real-world data, particularly focusing on dietary variables as exposures. The tool has demonstrated its capability to comprehensively analyze, visualize, and interpret associations between exposures and outcomes through metabolomic profiles.\nConclusion: In summary, TriplotGUI offers a powerful and flexible platform for integrating exposures, omics data, and outcomes to unravel their complex relationships. Its user-friendly interface combined with comprehensive analytical capabilities makes it an invaluable tool for molecular epidemiology research, advancing our understanding of exposure-risk relationships and potential mediating mechanisms\n\n\nSteps\nTriplotGUI is a reactive stepwise modular application designed for multi-omics data analysis. The workflow consists of five key steps and two general functionalities, with each step building upon the previous ones. Here’s an overview of the process:\n \nStep1: PCA/WGCNA plots\nTransforms high-dimensional Omics data into a manageable number of components using principal component analysis (PCA) or weighted correlation network analysis (WGCNA).\nStep2: Exposure correlations\nAssesses correlations between exposures and component scores from Step 1, with the option to adjust for confounders.\nStep3: Outcome associations\nEvaluates risk associations between outcomes and component scores from Step 1, allowing for confounder adjustment.\nStep4: Triplot\nCo-visualizes three layers of information in a 2D plot: - Component scores and loadings - Correlation coefficients - Risk association estimates (beta coefficients or odds ratios)\nStep5A: Triplot with mediation\nPerforms mediation analysis on selected exposures and outcomes, using component scores as mediators. Visualizes results alongside data from previous steps in a multi-layered 2D plot.\nStep5B: Mediation barplots\nProvides bar plots showing the magnitude and direction of indirect, direct, and total effects for individual mediation analyses.\nComparative Visualization:\nCompares correlations, associations, mediation estimates, and their significance levels using heatmaps.\nData Download:\nAllows users to view and download intermediate data, generated results, and a comprehensive object containing all relevant information.\n  We will give detailed explanations of statistical data analysis and visualization in each step in the Manual session.\nGo to TriplotGUI’s git repository. Click the download icon at the right side and download the Exampledata.zip. Unzip it and you will find the data that will be used as example in the tutorial."
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Projects",
    "section": "",
    "text": "This page contains a brief overview of projects that I significantly shaped throughout the entire project life cycle. In academic terms, this mostly corresponds to first-author publications (single and shared). If you’re interested in a full list of projects I have been involved in, please check out my CV."
  },
  {
    "objectID": "project.html#cmpe",
    "href": "project.html#cmpe",
    "title": "Projects",
    "section": "\n1 Consistency Model Posterior Estimation",
    "text": "1 Consistency Model Posterior Estimation\n\nPreprint (arXiv)\nConsistency models for neural posterior estimation (CMPE) is a new free-form conditional sampler for scalable, fast, and amortized simulation-based inference with generative neural networks. CMPE combines the advantages of normalizing flows and flow matching methods into a single generative architecture: It essentially distills a continuous probability flow and enables rapid few-shot inference with an unconstrained architecture that can be tailored to the structure of the estimation problem."
  },
  {
    "objectID": "project.html#multinpe",
    "href": "project.html#multinpe",
    "title": "Projects",
    "section": "\n2 Deep Fusion for Multimodal Simulation-Based Inference",
    "text": "2 Deep Fusion for Multimodal Simulation-Based Inference\n\nPreprint (arXiv)\nWe present multimodal neural posterior estimation (MultiNPE), a method to integrate heterogeneous data from different sources in simulation-based inference with neural networks. Inspired by advances in attention-based deep fusion learning, it empowers researchers to analyze data from different domains and infer the parameters of complex mathematical models with increased accuracy and better performance under partially missing data."
  },
  {
    "objectID": "project.html#data-efficient-amortized-bayesian-inference-via-self-consistency-losses",
    "href": "project.html#data-efficient-amortized-bayesian-inference-via-self-consistency-losses",
    "title": "Projects",
    "section": "\n3 Data-Efficient Amortized Bayesian Inference via Self-Consistency Losses",
    "text": "3 Data-Efficient Amortized Bayesian Inference via Self-Consistency Losses\n\nShort Paper (NeurIPS UniReps 2023)\nWe propose a method to improve the efficiency and accuracy of amortized Bayesian inference by leveraging universal symmetries in the probabilistic joint model \\(p(\\theta,y)\\). In a nutshell, we invert Bayes’ theorem and estimate the marginal likelihood based on approximate representations of the joint model. Upon perfect approximation, the marginal likelihood is constant across all parameter values by definition. However, approximation error leads to undesirable variance in the marginal likelihood estimates across different parameter values. We formulate violations of this symmetry as a loss function to accelerate the learning dynamics of conditional neural density estimators."
  },
  {
    "objectID": "project.html#meta-uncertainty-BMC",
    "href": "project.html#meta-uncertainty-BMC",
    "title": "Projects",
    "section": "\n4 Meta-Uncertainty in Bayesian Model Comparison",
    "text": "4 Meta-Uncertainty in Bayesian Model Comparison\n\nPaper (AISTATS 2023) | Code | ’Project website | Poster | Presentation (15min)\nMeta-Uncertainty represents a fully probabilistic framework for quantifying the uncertainty over Bayesian posterior model probabilities (PMPs) using meta-models. Meta-models integrate simulated and observed data into a predictive distribution for new PMPs and help reduce overconfidence and estimate the PMPs in future replication studies."
  },
  {
    "objectID": "project.html#bayesflow-amortized-bayesian-workflows-with-neural-networks",
    "href": "project.html#bayesflow-amortized-bayesian-workflows-with-neural-networks",
    "title": "Projects",
    "section": "\n5 BayesFlow: Amortized Bayesian Workflows With Neural Networks",
    "text": "5 BayesFlow: Amortized Bayesian Workflows With Neural Networks\n\nSoftware Paper | Documentation | BayesFlow Forums (new!)\nBayesFlow is a Python library for simulation-based training of established neural network architectures for amortized data compression and inference. Amortized Bayesian inference, as implemented in BayesFlow, enables users to train custom neural networks on model simulations and re-use these networks for any subsequent application of the models. Since the trained networks can perform inference almost instantaneously, the upfront neural network training is quickly amortized."
  },
  {
    "objectID": "project.html#jana-jointly-amortized-neural-approximation-of-complex-bayesian-models",
    "href": "project.html#jana-jointly-amortized-neural-approximation-of-complex-bayesian-models",
    "title": "Projects",
    "section": "\n6 JANA: Jointly Amortized Neural Approximation of Complex Bayesian Models",
    "text": "6 JANA: Jointly Amortized Neural Approximation of Complex Bayesian Models\n\nPaper (UAI 2023) | Python library\nJANA is a new amortized solution for intractable likelihood functions and posterior densities in Bayesian modeling. It trains three networks to learn both an approximate posterior and a surrogate model for the likelihood, enabling amortized marginal likelihood and posterior predictive estimation."
  },
  {
    "objectID": "project.html#sbi-model-misspecification",
    "href": "project.html#sbi-model-misspecification",
    "title": "Projects",
    "section": "\n7 Detecting Model Misspecification in Amortized Bayesian Inference with Neural Networks",
    "text": "7 Detecting Model Misspecification in Amortized Bayesian Inference with Neural Networks\n\nPaper (GCPR 2023, Best Paper Honorable Mention) | Code | Poster Novel neural network based architectures enable amortized Bayesian inference in settings where the likelihood function is only implicitly defined by a simulation program. But how faithful is such inference when simulations represent reality somewhat inaccurately? This paper illustrates how imposing a probabilistic structure on the latent data summary space can help to detect potentially catastrophic domain shifts during inference.\n\nShow the code#don't run code, but show code\n3\n\n\n\nShow the code#run code, and show code, don't show output\n4\n\n\n\n\n[1] 2\n\n\n[1] 3\n\n\n\nShow the code#run code, and show code, and show output\n5\n\n[1] 5\n\nShow the codes&lt;-function(x){x+1}\ns(23)\n\n[1] 24\n\n\nFOR REFERENCE: Graduation Cap\n # stopped working 5/1/2023?"
  },
  {
    "objectID": "simple.html",
    "href": "simple.html",
    "title": "Tutorial(simple) - User Interface",
    "section": "",
    "text": "Before you begin, ensure that you have access to either the online version of TriplotGUI or can use TriplotGUI as a stand-alone application on your computer following Setup."
  },
  {
    "objectID": "simple.html#step-1-data-reduction-of-omics-data",
    "href": "simple.html#step-1-data-reduction-of-omics-data",
    "title": "Tutorial(simple) - User Interface",
    "section": "Step 1: Data reduction of omics data",
    "text": "Step 1: Data reduction of omics data\n\n\nFirst, upload the Omics data in Step 1 of the interface.\n\nAfter successfully uploading the data, a series of buttons will appear, allowing you to make modifications to the data reduction process for the Omics data.\n\nOnce the upload is complete, you can explore the visualization panel on the right side. Here, you will be able to view all the relevant plots (score, loadings, biplot, screeplot).\n\n\n\n\n\n\n\n\n\nScree Plot: Assess the variance explained by each principal component.\n\nScore Plot: Visualize sample clustering and identify any outliers.\n\nLoadings Plot: Examine the contribution of each variable to the principal components.\n\nBiplot: Get a comprehensive view of how samples relate to each other alongside variable contributions."
  },
  {
    "objectID": "simple.html#step-2-3-exposure-correlations-outcome-associations",
    "href": "simple.html#step-2-3-exposure-correlations-outcome-associations",
    "title": "Tutorial(simple) - User Interface",
    "section": "Step 2-3: Exposure correlations & Outcome associations",
    "text": "Step 2-3: Exposure correlations & Outcome associations\nNext, proceed to upload the exposures, outcomes, and covariates data in Steps 2 and 3 of the interface.\n\nOnce you have uploaded these datasets, you can view the correlation coefficients in Step 2 and the risk estimates in Step 3. To refresh the visualizations and see the updated plots, simply click on the Refresh Plot button. This will allow you to analyze the relationships between your exposures, outcomes, and covariates effectively."
  },
  {
    "objectID": "simple.html#step-4-visualization-of-triplot",
    "href": "simple.html#step-4-visualization-of-triplot",
    "title": "Tutorial(simple) - User Interface",
    "section": "Step 4: Visualization of Triplot",
    "text": "Step 4: Visualization of Triplot\nIn Step 4 of the interface, you can view and download the triplot by clicking Refresh Plot The left-side panel allows you to make adjustments to the plot as needed.\n\nIn the triplot, black arrows represent loadings of Omics variables, forming patterns in different components (axes). Blue circle points show exposure correlations with the components, while red square points indicate outcome associations with the components.\nFor interpretation, let’s focus on Principal Component 1 (PC1) and Principal Component 2 (PC2), using the exposures \"Refined grains\", \"Red meat\", and the outcome \"BMI\" as examples:\nPC1: This component shows a positive association with BMI and is correlated with high intakes of red meat and refined grains, even after adjusting for age and sex. This suggests that the metabolite features dominating PC1 may provide valuable insights into how the intake of red meat and refined grains could influence BMI.\nPC2: In contrast, PC2 exhibits a smaller association with BMI and a weak inverse correlation with red meat and refined grains. The metabolite features contributing significantly to PC2 may indicate a marginal beneficial effect of these dietary components, although this effect appears to be limited. This may also suggest that the features dominating PC2 may reflect metabolite patterns influenced by food, but not to a large degree associations with metabolic regulation in relation to health.\nThis interpretation highlights how different dietary exposures relate to metabolic outcomes, offering insights into potential mechanisms at play."
  },
  {
    "objectID": "simple.html#step-5-triplot-with-mediation",
    "href": "simple.html#step-5-triplot-with-mediation",
    "title": "Tutorial(simple) - User Interface",
    "section": "Step 5: Triplot with mediation",
    "text": "Step 5: Triplot with mediation\n\n\n\n\n\n\nMediation analysis will be performed using the conventional “product” method on our selected exposures (\"Refined grains\", \"Red meat\"), mediators (PC1 and PC2), and the outcome of interest (\"BMI\"), adjusting for age and sex in both the exposure-mediator and mediator-outcome relationships.\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nPlease note that you need to click Do Mediation to initiate the mediation analysis.\nBy default, only proportion mediated is visualized. You could go to the “Visualization setting” to select Mediation estimate or proportion as Estimate to show the indirect effect or total effect in the triplot with mediation.\n\n\n\nIn Step 5B of the interface, you can view bar plots that display the direct, indirect, and total effects for each exposure-mediator-outcome combination. This tool conveniently illustrates the direction and magnitude of mediation estimates.\n\n\n\n\n\n\n\nNote\n\n\n\nThe barplot displays direct, indirect, and total effects for each exposure-mediator-outcome combination, providing a convenient tool to assess the direction and magnitude of mediation estimates.\n\nColor coding indicates significance and direction: red represents significant positive effects (p&lt;0.05), blue represents significant negative effects (p&lt;0.05), and grey represents insignificant effects.\nSignificance levels are denoted by stars: one star for p&lt;0.05, two stars for p&lt;0.01, and three stars for p&lt;0.001.\n\n\n\nBased on the barplot and the triplot with mediation, we observed significant mediation effects through PC1 for the red_meat-BMI and refined_grain-BMI associations. This finding suggests that the metabolite features contributing to PC1 are likely mediating the pathway from red meat and refined grain intake to BMI changes. These results provide insight into potential metabolic mechanisms linking dietary patterns to body mass index."
  },
  {
    "objectID": "simple.html#comparative-visualization",
    "href": "simple.html#comparative-visualization",
    "title": "Tutorial(simple) - User Interface",
    "section": "Comparative Visualization",
    "text": "Comparative Visualization\nUsers can check the heatmaps of correlations, risk estimations, and mediation results in Step 5A of the interface. To focus specifically on the results relevant to PC1 and PC2, you can remove other principal components in the “Visualization Settings.” This will streamline the analysis, allowing for a clearer interpretation of the relationships involving these two components.\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nSignificance is indicated as follows. One star for p&lt;0.05; Two stars for p&lt;0.01; Three stars for p&lt;0.001.\nThe first two plots, correlation coefficients with exposures and risk estimates of outcomes will show all the exposure and outcome variables that are not removed from visualization.\nNote that only the selected exposures, mediators and outcomes that we use to do mediation on will show up in the mediation results. The rows in the heatmaps are mediators and the column represents exposure-outcome pairs. For each exposure-outcome pair, 4 result are shown: IE (indirect effect), TE (total effect), PM(Proportion Mediated) and APM(Adjusted Proportion Mediated). Please see Details section for more information. The “BK” before the names of exposures-outcome pairs means that this mediation is using the Coventional Baron-Kenny “product” method."
  },
  {
    "objectID": "simple.html#data-download",
    "href": "simple.html#data-download",
    "title": "Tutorial(simple) - User Interface",
    "section": "Data download",
    "text": "Data download\nRelevant data and intermediate results can be viewed and downloaded directly from the interface."
  },
  {
    "objectID": "use_case.html",
    "href": "use_case.html",
    "title": "Use case - User Interface",
    "section": "",
    "text": "Before starting, please make sure you have installed the TriplotGUI package following Setup."
  },
  {
    "objectID": "use_case.html#step-1-data-reduction-of-omics-data.",
    "href": "use_case.html#step-1-data-reduction-of-omics-data.",
    "title": "Use case - User Interface",
    "section": "Step 1: Data reduction of Omics data.",
    "text": "Step 1: Data reduction of Omics data.\n\n\nFirst upload the Omics data in step 1. Inspect the classes of Omics variables briefly. Use the default of “Data analysis settings”. Play around in the “Visualization settings”. Since we have 177 Omics variables, click the Loading labels to No so that you have a clearer view of your loadings plot. You can observed that using PCA as data analysis method, your loadings (representing omics variables) are mostly positively associated with your component 1."
  },
  {
    "objectID": "use_case.html#step-2-exposures-correlations-outcomes-associations",
    "href": "use_case.html#step-2-exposures-correlations-outcomes-associations",
    "title": "Use case - User Interface",
    "section": "Step 2: Exposures’ correlations & Outcomes’ associations",
    "text": "Step 2: Exposures’ correlations & Outcomes’ associations\nThen upload exposures and covariate data in step 2A. Briefly inspecting variable classes. You can choose which covariate variables to adjust as you wish. In our use case example, for the sake of simplicity, we will not perform any covariate adjustment (the Raw or partial correlation is specified as Raw in the “Data analysis settings”)\n\n\n\n\n\n\n\n\n\nChange your “Data analysis settings” as the figure below.\n\n\n\n\n\n\nNote\n\n\n\n\nSelect One-hot-encoding in Categorical variables performs one-hot-encoding to transform categorical exposures variables (i.e. HFI) with n&gt;2 classes to n binary variables. If Use Original is specified in Categorical variables, then the HFI variable is forced to be a numeric variable. This is not recommended unless you are sure that the level itself reflects the numeric value.\nThe approaches for managing Missing values are inherited from the cor package for continuous exposures. Please check cor package for more information.\n\n\n\n\n\n\nYou could briefly see the correlation coefficients in “Visualizations” by clicking “Refresh plot”.\n\n\n\n\n\n\nThen in step 2B, upload outcome and covariate data By briefly inspecting variable classes, you could notice: - In the outcome data, \"BMI\" is a numeric variable; \"BMI_cat\" and \"T2D\" are factor variables. - A variable called \"X\" exists in the covariate data. This is because the covariate data is uploaded as a csv file and the observation number may automatically be generated as a new variable when the file is read in. Remove this variable since it is not an actual covariate.\n\n\n\n\n\n\n\n\n\nChange your “Data analysis settings” and “Visulization settings” as the figure below.\n\n\n\n\n\n\nNote\n\n\n\nSome clarification for using multinomial regression and pairing variables:\n\nWhen a pairing variable is not provided:\n\nNot performing multinomial regression means that one-hot-encoding will be performed to transform outcome’s categorical variables with n &gt; 2 classes to n binary variables. And logistic regression will be performed on the binary variables and linear regression will be performed on continuous variables.\nPerforming multinomial regression means that multinomial regression will be performed on outcome’s categorical outcome variable with n &gt; 2 classes, which gives n-1 estimates. And logistic regression will be performed on the binary variables and linear regression will be performed on continuous variables.\n\n\nWhen a pairing variable is provided:\n\nNot performing multinomial regression means that one-hot-encoding will be performed on outcome’s categorical variables with n &gt; 2 classes. And then conditional logistic regression will be performed on the binary variables and linear mixed model will be performed on continuous variables, using the pairing information.\nPerforming multinomial regression means that the pairing information will not be ignored and used (since the outcomes can have more than 2 classes), multinomial regression will be performed on outcome’s categorical variable, which gives n-1 estimates. And logistic regression will be performed on the binary variables and linear regression will be performed on continuous variables. THIS IS THE CASE IN OUR EXAMPLE.\n\n\n\n\n\n\n\n\n\n\n\nYou could briefly see the risk estimate in “Visualizations” by clicking “Refresh plot”."
  },
  {
    "objectID": "use_case.html#step-3-visualization-of-triplot",
    "href": "use_case.html#step-3-visualization-of-triplot",
    "title": "Use case - User Interface",
    "section": "Step 3: Visualization of Triplot",
    "text": "Step 3: Visualization of Triplot\nIn step 3, by clicking “Refresh plot”, you can see and download the triplot that co-visualizing the three plots shown above. The left side panel gives you freedom of making adjustment to the plot. \nIn the triplot, blue circle points represent exposure correlations and the red square points represents outcome risk estimates with confidence interval. So what information can we get from this figure? Lets us list a few points:\n\nHaving a brief look, the generally healthy food (e.g. \"Fruits\", \"Vegetables\") is on the first dimension of the figure and the generally unhealthy food (e.g. \"Hamburger\", \"Sausage\", \"Margarine\") is on the third dimension of the figure. The numeric outcome \"BMI\", binary outcome \"T2D\", and one-hot-encoded categorical \"BMI_cat\" outcome is on the second and fourth dimension of the figure.\nExplanation on some variables in the plot:\n\n\n\"HFI\" stands for healthy food index. A higher \"HFI\" suggests healthier diet. \"HFI\" ranges from 0 to 6. You can see that there are HFI_0, HFI_1…HFI_6 in the figure and that is because \"HFI\" is used as a factor exposure variable in step 2 and is one-hot-encoded (´allowcategorical=F´) to the same number of binary variables as its number of levels. For example, HFI_6 is a binary variable where individuals with \"HFI 6\" (most healthy diet people) will be labeled as 1 and the rest of individuals will be labelled as 0. HFI_0 is a binary variable where individuals with \"HFI 6\" (most unhealthy diet people) will be labeled as 1 and the rest of individuals will be labelled as 0. HFI_1…HFI_5 has limited use since it only separates the group of people with certain \"HFI\" from to the rest, which is a mixture of healthier and less healthier diet people.\n\n\"BSDS\" stands for Baltic Sea Diet Score ranging. A higher \"BSDS\" suggests healthier diet. \"BSDS\" is used as a numeric variable ranging from 2 to 25 in this step.\n\nT2D_1 represents the odds ratio of \"T2D\". Since \"T2D\" is a binary variable with 0(control) and 1(case) level. A logistic regression is performed on the \"T2D\", and 0 is used as reference. That is why it shows T2D_1 on the plot.\n\nBMI_cat_obese, BMI_cat_overweight,BMI_cat_underweight are the odds ratio generated from the multinomial regression. Since \"BMI_cat\" is a categorical outcome and multinomial regression is performed in step 2 (multinomial=T), normal weight is uses as a reference and odds ratio of obese, overweight and underweight is produced. (Note that the first level of the factor variable is set as the default reference, in this case it is normal.\n\n\nAdjusting for \"Age\", \"Gender\", \"Smoking\", \"Education\" and \"FastingGlucose\", component from the first cluster (on x-axis) correlates positively with generally healthy food (e.g. \"fruits\", \"vegatables\") and food index (e.g. \"BSDS\") and negatively with unhealthy food (e.g. \"Hamburger\", \"pizza\"). It also reversely associated with \"T2D\" and \"BMI\". From the result from \"BMI_cat\", this components also reversely associated with being obese. This suggests that metabolite features from the first cluster may contribute to the mechanism from food to the incidence of T2D and obese\nComponent from the second cluster (on y-axis) associated positively with generally healthy food (e.g. \"fruits\", \"vegatables\") and food index (e.g. \"BSDS\") and negatively with unhealthy food (e.g. \"Hamburger\", \"pizza\"). However, the component correlates also positively with \"T2D\",\"BMI\", obese, overweight and negatively associated with underweight. This suggests that metabolite features from the second cluster may be relevant to the mechainism of weight gain through healthy food (or a weight loss through unhealthy food)\n\nThere are many things you could explore further in the following mediation analysis. To narrow down our focus and clearly show our examples, we select \"BSDS\" (Baltic Sea Diet Score) and \"Hamburger\" as our exposures, \"BMI\" and \"T2D\" as outcome to enter our next step."
  },
  {
    "objectID": "use_case.html#step-4-mediation-analysis-and-visualization",
    "href": "use_case.html#step-4-mediation-analysis-and-visualization",
    "title": "Use case - User Interface",
    "section": "Step 4: Mediation analysis and visualization",
    "text": "Step 4: Mediation analysis and visualization\nThis time, we perform the mediation analysis using the conterfactual/potential outcome method (the ´mediation´ package) on the our exposures (i.e. \"BSDS\", \"Hamburger\"), mediators (i.e. the first PC of the first 2 clusters) and outcome (i.e. \"T2D\", \"BMI\") of interest, adjusting for \"Age\", \"Gender\", \"Smoking\", \"Education\" and \"FastingGlucose\" for both exposure-mediator and mediator-outcome relationship.\n\n\n\n\n\n\nNote\n\n\n\nIn the counterfactual mediation analysis, you need to specify contrast values of treatment and controls for each exposure. In brief, the algorithm will compare the scenarios with these 2 exposure values/levels. For my detailed explanation please refer to this paper of the mediation R package.\nIf an exposure variable is continuous (numeric variable), it is recommended that the 2 exposure values is chosen between the range of the exposure variable. If an exposure variable is categorical (factor variable), the 2 exposure levels should be chosen from the levels of the exposure variable.\n\n\n\n\nUse the following settings for your data analysis. Mediation analysis is then performed using the counterfactual method on the our selected exposures, mediators and our selected outcomes, adjusting for covariates for both exposure-mediator and mediator-outcome relationship.\n\n\n\n\n\n\nNote\n\n\n\n\nNote that you need to click Do mediation to start running the mediation analysis.\n\n\n\n\n\n\n\n\nYou could then play around in the “Visualization settings” too see how you want to visualize your plot.\n\n\n\nYou could first only show the proportion mediated(PM) and adjust the limits to make the points more visible. \n\n\n\n In the figure, even though not significant, we could see the direction and magnitude of proportion mediated for the 2 mediators, all the exposures and outcomes.\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nNote that some confidence intervals are automatically removed form the figure if they are not within the limit.\nNote that for some mediations, direct effect and indirect effects are in the opposite direction, implying possibly proportion mediated&gt;1, since total effect could smaller than indirect effect.\n\n\n\n\n\nYou then show the adjusted proportion mediated(PM) and adding the layers of correlation and risk estimates \n\n\n\n\n\n\nBy observing this figure, we could see the direction and magnitude of adjusted proportion mediated for the 2 mediators, all the exposures and outcomes. The position of the points is similar what we have seen for proportion mediated. Note that APM for BSDS as exposure and T2D as outcome is smaller than their PM. This is because the indirect and direct effect for this mediation is of similar size but in opposite direction. This leads to a smaller total effect and in turn larger PM, but APM will not be affected by the directionality of direct and indirect effect. ::: callout-note - No confidence interval is shown for adjusted proportion mediated, as such value can not be directly calculated from the mediation analysis.\n\nNote that even direct effect and indirect effects are in the opposite direction, adjusted proportion mediated is always smaller than 1, since it uses the sum of the absolute value of indirect and direct effect as denominator. \\[APM=\\frac{IE}{|IE|+|DE|}\\cdot\\frac{|IE+DE|}{IE+DE}=\\frac{IE}{IE+DE}\\cdot\\frac{|IE+DE|}{|IE|+|DE|}=\\frac{IE}{IE+DE}\\cdot\\frac{|IE|+|DE|}{|IE+DE|}\\] :::\n\nIn step 4, you can also see the barplots showed direct, indirect and total effect for each exposure-mediator-outcome combination. It is a convenient tool to check the direction and magnitude of mediation estimates."
  },
  {
    "objectID": "use_case.html#comparative-visualization",
    "href": "use_case.html#comparative-visualization",
    "title": "Use case - User Interface",
    "section": "Comparative Visualization",
    "text": "Comparative Visualization\nUsers can then check the heatmaps of correlations, risk estimations and mediation results at step 5. By removing other PCs, exposures or outcomes in the “Visualization settings”, users may only show correlation, risk estimation and mediation results of their interest."
  },
  {
    "objectID": "use_case.html#data-download",
    "href": "use_case.html#data-download",
    "title": "Use case - User Interface",
    "section": "Data Download",
    "text": "Data Download\nRelevant data, intermediate results, can then be viewed and downloaded at step 6."
  }
]