---
title: "Installation"
filters:
   - lightbox
lightbox: auto
subtitle: "Install TriplotGUI as a stand-alone application or use it on webserver"
title-block-banner: true
title-block-banner-color: white
title-block-categories: false

page-layout: full
format:
  html: 
    margin-top: 0em
    margin-bottom: 0em
    padding-top: 0em
    padding-bottom: 0em
    minimal: true
    smooth-scroll: true
    fig-responsive: true
    toc-location: right
    toc-depth: 5
    toc-title: Installation
    code-fold: show
    code-summary: "Show the code"
    code-overflow: wrap
    code-tools: true
    code-copy: true
    highlight: tango
    df-print: paged  ## kable is another option How the dataframe looks like 
    standalone: false  ### specifies if all assets and libraries must be integrated into the output html file as a standalone document.
    fig-align: right
    theme:  solar
geometry: margin=lin  
---

The TriplotGUI tool can be accessible online at [here](https://yingxiao.shinyapps.io/triplotgui/){target="_blank"}. If you want to use TriplotGUI as a stand-alone application (using it only on a local computer), please follow the instruction below.

# Install packages

To install and use TriplotGUI as a stand-alone application on your local computer, start by opening your R console or RStudio. Then, install the required packages by running the following code:

```{r }
#| eval: false
#| echo: true
#| warning: false
#| error: true
#| classes: styled-output

if (!require(remotes)) {
  install.packages("remotes")  # Install the package if it's not available.
  library(remotes)             # Load it after installation.
}

remotes::install_gitlab("YingxiaoYan/TriplotGUI")
```

During installation, you may encounter prompts in your console. For package updates, it is recommended to choose "**3. None**". If asked whether you want to install from source packages that need compilation, select "**No**". When prompted about updating all, some, or none, it is advisable to choose "**n**". <!-- <ul> -->

<!-- <li>Sometimes it pops up in your console that asks you *which package you would like to update*. We recommened you to chose **3.None**</li> -->

<!-- <li>Sometimes it pops up in your console that asks *Do you want to install from source packages which need compliation* . We recommended you to chose **no**</li> -->

<!-- <li>Sometimes it pops up in your console that asks *Update all/some/none?\[a/s/n\]* . We recommended you to chose **n**</li> -->

<!-- </ul> -->

# Load libraries

Once the installation is complete, load the TriplotGUI library by executing:

```{r }
#| eval: false
#| echo: true
#| warning: false
#| error: true
#| classes: styled-output

library(TriplotGUI)
```

# Change the maximize size of data file allowed

If you wish to change the maximum allowed data file size (the default is 5 MB), you can specify your preferred maximum size using the following code:

```{r }
#| eval: false
#| echo: true
#| warning: false
#| error: true
#| classes: styled-output

filesize=100  ##MB
options(shiny.maxRequestSize=filesize*1024^2)

```

# Activate the user interface

To activate the graphical user interface, run:

```{r }
#| eval: false
#| echo: true
#| warning: false
#| error: true
#| classes: styled-output


TriplotGUI_shiny()

```

This will launch the TriplotGUI application on your local machine. Keep in mind that larger datasets may slow down the tool's performance, so it is recommended to perform some variable selection before using very large datasets.
