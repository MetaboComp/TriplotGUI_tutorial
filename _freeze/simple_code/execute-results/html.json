{
  "hash": "be1b5bc528e6bda01fd8624734f6f2e7",
  "result": {
    "markdown": "---\ntitle: \"Tutorial(simple) - Code\"\nsubtitle: \"Simple demo of using code in TriplotGUI\"\ntitle-block-banner: true\ntitle-block-banner-color: white\ntitle-block-categories: false\n\npage-layout: full\nformat:\n  html: \n    margin-top: 0em\n    margin-bottom: 0em\n    padding-top: 0em\n    padding-bottom: 0em\n    minimal: true\n    smooth-scroll: true\n    fig-responsive: true\n    toc-location: right\n    toc-depth: 5\n    toc-title: Tutorial\n    number-sections: true  ## add number in the session or not\n    number-depth: 4\n    code-fold: show\n    code-summary: \"Show the code\"\n    code-overflow: wrap\n    code-tools: true\n    code-copy: true\n    highlight: tango\n    df-print: paged  ## kable is another option How the dataframe looks like \n    standalone: false  ### specifies if all assets and libraries must be integrated into the output html file as a standalone document.\n    fig-align: right\n    theme:  solar\ngeometry: margin=lin  \n---\n\n\n\n\nBefore starting,please make sure you have installed the TriplotGUI package following [Setup](installation.qmd){target=\"_blank\"}.\n\nThe code of at this page can be downloaded [here](https://gitlab.com/YingxiaoYan/triplotgui/-/blob/main/Tutorial_code/CAMP_2_applying_TriplotGUI_code.R){target=\"_blank\"}\n\n# Data description\n\nThe data used in this page of tutorial can be downloaded [here](https://gitlab.com/YingxiaoYan/triplotgui/-/blob/main/data/CAMP_2.rda){target=\"_blank\"} in rda format.\n\nThe Data used for this example of code is ***CAMP_2***. This is a synthetic dataset that was simulated from the authentic data used in a cross-sectional study of carbonhydrate alternatives and metabolic phenotypes in Chinese young adults (Liu et al. 2018). The simulated data ***CAMP_2*** is a list that contains three data frames:\n\n-   Clinical measurements (ClinData, 11 variables): `\"AGE\"`, `\"SEX\"`, `\"BMI\"`, `\"triglycerides\"`, `\"total_cholesterol\"` `\"HDL\"`(high-density lipoprotein cholesterol), `\"LDL\"`(low-density lipoprotein cholesterol),, `\"GGT\"`(gamma-glutamyltransferase), `\"ALT\"`(alanine aminotransferase), `\"AST\"`(aspartate aminotransferase), `\"creatinine\"`, `\"Urea_nitrogen\"`, `\"Uric_acid\"`, `\"Fasting_glucose\"`.\n-   Plasma metabolites predictive of BMI (MetaboliteData, 20 variables)\n-   Dietary intake as measured by food frequency questionnaires (FoodData, 11 variables): `\"Refined_grains\"`, `\"Coarse_grains\"`, `\"Red_meat\"`, `\"Poutry\"`, `\"Seafood\"`, `\"Egg\"`, `\"Animal_organs\"`, `\"Vegetables\"`, `\"Fruits\"`, `\"Potatos\"`, `\"Legumes\"`.\n\nThe data frames are row-wise matched by observation and consist of 300 synthetic observations.\n\n**Reference**\n\nLiu X, Liao X, Gan W, et al. Inverse Relationship between Coarse Food Grain Intake and Blood Pressure among Young Chinese Adults. Am J Hypertens. 2019;32(4):402–408. [10.1093/ajh/hpy187](https://academic.oup.com/ajh/article/32/4/402/5236579?login=true){target=\"_blank\"}\n\nSchillemans T, Shi L, Liu X, Åkesson A, Landberg R, Brunius C. Visualization and Interpretation of Multivariate Associations with Disease Risk Markers and Disease Risk-The Triplot. Metabolites. 2019 Jul 6;9(7):133. [doi: 10.3390/metabo9070133](https://www.mdpi.com/2218-1989/9/7/133){target=\"_blank\"}\n\n# Research question\n\nWe want to assess the relationship between diet, metabolic profiles and risk factors of metabolic diseases (i.e. BMI, total cholesterol, triglyceride, HDL, LDL). We assume that metabolites serves as mediators, mediating the effect of dietary exposures on BMI outcome.\n\n# Data exploration\n\n***CAMP_2*** is loaded in the R environment up on running `library(TriplotGUI)`. We will do some data exploration first to see how the data looks like.\n\n\n::: {.cell .styled-output}\n\n:::\n\n\n## Check CAMP_2\n\nCheck ***CAMP_2*** as a list:\n\n\n::: {.cell .styled-output}\n\n```{.r .cell-code}\nclass(CAMP_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"list\"\n```\n:::\n\n```{.r .cell-code}\nnames(CAMP_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"FoodData\"       \"MetaboliteData\" \"ClinData\"      \n```\n:::\n:::\n\n\n## Check datasets\n\nCheck the names of variables in each data:\n\n\n::: {.cell .styled-output}\n\n```{.r .cell-code}\ncolnames(CAMP_2$ClinData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AGE\"               \"SEX\"               \"BMI\"              \n [4] \"triglycerides\"     \"total_cholesterol\" \"HDL\"              \n [7] \"LDL\"               \"GGT\"               \"ALT\"              \n[10] \"AST\"               \"creatinine\"        \"Urea_nitrogen\"    \n[13] \"Uric_acid\"         \"Fasting_glucose\"  \n```\n:::\n\n```{.r .cell-code}\ncolnames(CAMP_2$MetaboliteData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"PC_P_20_0_22_6_\"                                                                \n [2] \"X1__3_4_Dihydroxyphenyl__7__4_hydroxy_3_methoxyphenyl__1_6_heptadiene_3_5_dione\"\n [3] \"Unknown_675.6485_9.35\"                                                          \n [4] \"Unknown_1066.9034_10.16\"                                                        \n [5] \"PC_42_8_\"                                                                       \n [6] \"Unknown_931.7610_9.68\"                                                          \n [7] \"TG_52_0_\"                                                                       \n [8] \"CE_22_4_\"                                                                       \n [9] \"Neutral_glycosphingolipids1023.67\"                                              \n[10] \"TG_58_10_\"                                                                      \n[11] \"Neutral_glycosphingolipids971.72\"                                               \n[12] \"Unknown_914.7433_10.06\"                                                         \n[13] \"Cucurbic_acid\"                                                                  \n[14] \"DG_16_0_18_2_\"                                                                  \n[15] \"Indoleacrylic_acid\"                                                             \n[16] \"PC_O_20_0_22_6_\"                                                                \n[17] \"Unknown_948.6589_8.51\"                                                          \n[18] \"Unknown_858.5318_5.49\"                                                          \n[19] \"O_propanoyl_carnitine\"                                                          \n[20] \"DG_38_5_\"                                                                       \n```\n:::\n\n```{.r .cell-code}\ncolnames(CAMP_2$FoodData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Refined_grains\" \"Coarse_grains\"  \"Red_meat\"       \"Poutry\"        \n [5] \"Seafood\"        \"Egg\"            \"Animal_organs\"  \"Vegetables\"    \n [9] \"Fruits\"         \"Potatos\"        \"Legumes\"       \n```\n:::\n:::\n\n\n## Check variables' class\n\nWe then transform the data to dataframe format and then use TriplotGUI's `checkdata()` function in to examine the classes of variables.\n\n\n::: {.cell .styled-output}\n\n```{.r .cell-code}\nClinData<-as.data.frame(CAMP_2$ClinData)\nMetaboliteData<-as.data.frame(CAMP_2$MetaboliteData)\nFoodData<-as.data.frame(CAMP_2$FoodData)\n\nClinData_check<-checkdata(ClinData)\nMetaboliteData_check<-checkdata(MetaboliteData)\nFoodData_check<-checkdata(FoodData)\n```\n:::\n\n::: {.cell .styled-output}\n\n```{.r .cell-code}\nClinData_check$class_sumamry_statistics\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$check_class_vector\n              AGE               SEX               BMI     triglycerides \n        \"numeric\"          \"factor\"         \"numeric\"         \"numeric\" \ntotal_cholesterol               HDL               LDL               GGT \n        \"numeric\"         \"numeric\"         \"numeric\"         \"numeric\" \n              ALT               AST        creatinine     Urea_nitrogen \n        \"numeric\"         \"numeric\"         \"numeric\"         \"numeric\" \n        Uric_acid   Fasting_glucose \n        \"numeric\"         \"numeric\" \n\n$check_class_table\ncheck_class_vector\n factor numeric \n      1      13 \n```\n:::\n\n```{.r .cell-code}\nMetaboliteData_check$class_sumamry_statistics$check_class_table\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncheck_class_vector\nnumeric \n     20 \n```\n:::\n\n```{.r .cell-code}\nFoodData_check$class_sumamry_statistics\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$check_class_vector\nRefined_grains  Coarse_grains       Red_meat         Poutry        Seafood \n     \"numeric\"      \"numeric\"      \"numeric\"      \"numeric\"      \"numeric\" \n           Egg  Animal_organs     Vegetables         Fruits        Potatos \n     \"numeric\"      \"numeric\"      \"numeric\"      \"numeric\"      \"numeric\" \n       Legumes \n     \"numeric\" \n\n$check_class_table\ncheck_class_vector\nnumeric \n     11 \n```\n:::\n:::\n\n\n\n## Check sanities for variables\n\nWhether each variable contains missing (NA) or abnormal values (e.g. NAN, negative values, Indefinite values, blank values) can also be checked. \n\nThe previous `checkdata()` function can also generate a table to summarize how many and how many percentage of observations contain NA, NAN, zero, negative, indefinite(inf),and blank values(\" \") for each variable in each data frame.\n\n\n::: {.cell .styled-output}\n\n```{.r .cell-code}\nClinData_check$everycolumn\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"AGE\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"SEX\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"BMI\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"triglycerides\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total_cholesterol\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"HDL\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"LDL\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"GGT\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"ALT\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"AST\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"creatinine\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Urea_nitrogen\"],\"name\":[12],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Uric_acid\"],\"name\":[13],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Fasting_glucose\"],\"name\":[14],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0.00000000\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0.0000000\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"NA_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0.00000000\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0.0000000\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"NA_percentage\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0.00000000\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0.0000000\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"NaN_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0.00000000\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0.0000000\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"NaN_percentage\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0.00000000\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0.0000000\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"negative_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0.00000000\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0.0000000\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"negative_percentage\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"4.00000000\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"14.00000000\",\"9\":\"65.0000000\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"zero_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0.01333333\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0.04666667\",\"9\":\"0.2166667\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"zero_percentage\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0.00000000\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0.0000000\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"inf_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0.00000000\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0.0000000\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"inf_percentage\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0.00000000\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0.0000000\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"blank_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0.00000000\",\"5\":\"0\",\"6\":\"0\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0.0000000\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0\",\"_rn_\":\"blank_percentage\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nMetaboliteData_check$everycolumn\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"PC_P_20_0_22_6_\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"X1__3_4_Dihydroxyphenyl__7__4_hydroxy_3_methoxyphenyl__1_6_heptadiene_3_5_dione\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Unknown_675.6485_9.35\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Unknown_1066.9034_10.16\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"PC_42_8_\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Unknown_931.7610_9.68\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"TG_52_0_\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CE_22_4_\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Neutral_glycosphingolipids1023.67\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"TG_58_10_\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Neutral_glycosphingolipids971.72\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Unknown_914.7433_10.06\"],\"name\":[12],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Cucurbic_acid\"],\"name\":[13],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"DG_16_0_18_2_\"],\"name\":[14],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Indoleacrylic_acid\"],\"name\":[15],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"PC_O_20_0_22_6_\"],\"name\":[16],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Unknown_948.6589_8.51\"],\"name\":[17],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Unknown_858.5318_5.49\"],\"name\":[18],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"O_propanoyl_carnitine\"],\"name\":[19],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"DG_38_5_\"],\"name\":[20],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0.00000000\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0\",\"10\":\"0.00000000\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0.000000000\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"NA_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0.00000000\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0\",\"10\":\"0.00000000\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0.000000000\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"NA_percentage\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0.00000000\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0\",\"10\":\"0.00000000\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0.000000000\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"NaN_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0.00000000\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0\",\"10\":\"0.00000000\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0.000000000\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"NaN_percentage\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0.00000000\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0\",\"10\":\"0.00000000\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0.000000000\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"negative_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0.00000000\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0\",\"10\":\"0.00000000\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0.000000000\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"negative_percentage\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"7.00000000\",\"7\":\"0\",\"8\":\"16.00000000\",\"9\":\"0\",\"10\":\"8.00000000\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"1.000000000\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"zero_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0.02333333\",\"7\":\"0\",\"8\":\"0.05333333\",\"9\":\"0\",\"10\":\"0.02666667\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0.003333333\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"zero_percentage\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0.00000000\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0\",\"10\":\"0.00000000\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0.000000000\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"inf_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0.00000000\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0\",\"10\":\"0.00000000\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0.000000000\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"inf_percentage\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0.00000000\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0\",\"10\":\"0.00000000\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0.000000000\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"blank_number\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"0\",\"4\":\"0\",\"5\":\"0\",\"6\":\"0.00000000\",\"7\":\"0\",\"8\":\"0.00000000\",\"9\":\"0\",\"10\":\"0.00000000\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0\",\"14\":\"0.000000000\",\"15\":\"0\",\"16\":\"0\",\"17\":\"0\",\"18\":\"0\",\"19\":\"0\",\"20\":\"0\",\"_rn_\":\"blank_percentage\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nFoodData_check$everycolumn\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Refined_grains\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Coarse_grains\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Red_meat\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Poutry\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Seafood\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Egg\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Animal_organs\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Vegetables\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Fruits\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Potatos\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Legumes\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.0000000\",\"2\":\"0.0000000\",\"3\":\"0.0000000\",\"4\":\"0.0000000\",\"5\":\"0.0000000\",\"6\":\"0.0000000\",\"7\":\"0.0000000\",\"8\":\"0.00\",\"9\":\"0.0000000\",\"10\":\"0.0000000\",\"11\":\"0.0000000\",\"_rn_\":\"NA_number\"},{\"1\":\"0.0000000\",\"2\":\"0.0000000\",\"3\":\"0.0000000\",\"4\":\"0.0000000\",\"5\":\"0.0000000\",\"6\":\"0.0000000\",\"7\":\"0.0000000\",\"8\":\"0.00\",\"9\":\"0.0000000\",\"10\":\"0.0000000\",\"11\":\"0.0000000\",\"_rn_\":\"NA_percentage\"},{\"1\":\"0.0000000\",\"2\":\"0.0000000\",\"3\":\"0.0000000\",\"4\":\"0.0000000\",\"5\":\"0.0000000\",\"6\":\"0.0000000\",\"7\":\"0.0000000\",\"8\":\"0.00\",\"9\":\"0.0000000\",\"10\":\"0.0000000\",\"11\":\"0.0000000\",\"_rn_\":\"NaN_number\"},{\"1\":\"0.0000000\",\"2\":\"0.0000000\",\"3\":\"0.0000000\",\"4\":\"0.0000000\",\"5\":\"0.0000000\",\"6\":\"0.0000000\",\"7\":\"0.0000000\",\"8\":\"0.00\",\"9\":\"0.0000000\",\"10\":\"0.0000000\",\"11\":\"0.0000000\",\"_rn_\":\"NaN_percentage\"},{\"1\":\"0.0000000\",\"2\":\"0.0000000\",\"3\":\"0.0000000\",\"4\":\"0.0000000\",\"5\":\"0.0000000\",\"6\":\"0.0000000\",\"7\":\"0.0000000\",\"8\":\"0.00\",\"9\":\"0.0000000\",\"10\":\"0.0000000\",\"11\":\"0.0000000\",\"_rn_\":\"negative_number\"},{\"1\":\"0.0000000\",\"2\":\"0.0000000\",\"3\":\"0.0000000\",\"4\":\"0.0000000\",\"5\":\"0.0000000\",\"6\":\"0.0000000\",\"7\":\"0.0000000\",\"8\":\"0.00\",\"9\":\"0.0000000\",\"10\":\"0.0000000\",\"11\":\"0.0000000\",\"_rn_\":\"negative_percentage\"},{\"1\":\"65.0000000\",\"2\":\"110.0000000\",\"3\":\"101.0000000\",\"4\":\"85.0000000\",\"5\":\"103.0000000\",\"6\":\"100.0000000\",\"7\":\"116.0000000\",\"8\":\"57.00\",\"9\":\"56.0000000\",\"10\":\"67.0000000\",\"11\":\"79.0000000\",\"_rn_\":\"zero_number\"},{\"1\":\"0.2166667\",\"2\":\"0.3666667\",\"3\":\"0.3366667\",\"4\":\"0.2833333\",\"5\":\"0.3433333\",\"6\":\"0.3333333\",\"7\":\"0.3866667\",\"8\":\"0.19\",\"9\":\"0.1866667\",\"10\":\"0.2233333\",\"11\":\"0.2633333\",\"_rn_\":\"zero_percentage\"},{\"1\":\"0.0000000\",\"2\":\"0.0000000\",\"3\":\"0.0000000\",\"4\":\"0.0000000\",\"5\":\"0.0000000\",\"6\":\"0.0000000\",\"7\":\"0.0000000\",\"8\":\"0.00\",\"9\":\"0.0000000\",\"10\":\"0.0000000\",\"11\":\"0.0000000\",\"_rn_\":\"inf_number\"},{\"1\":\"0.0000000\",\"2\":\"0.0000000\",\"3\":\"0.0000000\",\"4\":\"0.0000000\",\"5\":\"0.0000000\",\"6\":\"0.0000000\",\"7\":\"0.0000000\",\"8\":\"0.00\",\"9\":\"0.0000000\",\"10\":\"0.0000000\",\"11\":\"0.0000000\",\"_rn_\":\"inf_percentage\"},{\"1\":\"0.0000000\",\"2\":\"0.0000000\",\"3\":\"0.0000000\",\"4\":\"0.0000000\",\"5\":\"0.0000000\",\"6\":\"0.0000000\",\"7\":\"0.0000000\",\"8\":\"0.00\",\"9\":\"0.0000000\",\"10\":\"0.0000000\",\"11\":\"0.0000000\",\"_rn_\":\"blank_number\"},{\"1\":\"0.0000000\",\"2\":\"0.0000000\",\"3\":\"0.0000000\",\"4\":\"0.0000000\",\"5\":\"0.0000000\",\"6\":\"0.0000000\",\"7\":\"0.0000000\",\"8\":\"0.00\",\"9\":\"0.0000000\",\"10\":\"0.0000000\",\"11\":\"0.0000000\",\"_rn_\":\"blank_percentage\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n::: callout-note\nYou shall only continue when the class of variables are correct and the missing or abnormal values in the variable are properly handled.\n:::\n\n## Build data for analysis\n\nWe see food data as our exposures and BMI, triglycerides, total_cholesterol, HDL and LDL as outcomes. We want to explore their relationships through the metabolomics data, using metabolites as assumed mediators. Sex and age are used as potential confounders for exposure-mediator and mediator-outcome association.\n\n\n::: {.cell .styled-output}\n\n```{.r .cell-code}\nexposure1<-FoodData\nOmics1<-MetaboliteData\noutcome1<-ClinData[,c(\"BMI\",\"triglycerides\",\"total_cholesterol\",\"HDL\",\"LDL\")]\ncovariates1<-ClinData[,c(\"SEX\" ,\"AGE\")]\n```\n:::\n\n\n# Code example of using TriplotGUI\n\nWe will use the most simple settings in this example. Please go to [Tutorial(complex)](complex_code.qmd){target=\"_blank\"}.if you want to try more advanced settings.\n\n## Step 1: Data reduction of omics data {#simple_link}\n\nUsing `TriplotGUI` package, first we perform dimension reduction, i.e. principal component analysis (PCA) on metabolomics data.\n\n\n::: {.cell .styled-output}\n\n```{.r .cell-code}\nreduced_Omics1<-PCAorWGCNA_plots(dataframe=Omics1,\n                                 pc_num = 5,\n                                 option=\"PCA\")\n```\n:::\n\n\nYou can see scree plot, score plot, loadings plot and biplot at this stage.\n\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\nreduced_Omics1$scree_plot\n```\n\n<details><summary>plot</summary>\n\n::: {.cell-output-display}\n![](simple_code_files/figure-html/showcode_runcode_showoutput_6-1.png){width=672}\n:::\n\n\n\n</details>\n\n```{.r .cell-code}\nreduced_Omics1$score_plot\n```\n\n<details><summary>plot</summary>\n\n::: {.cell-output-display}\n![](simple_code_files/figure-html/showcode_runcode_showoutput_6-2.png){width=672}\n:::\n\n\n\n</details>\n\n```{.r .cell-code}\nreduced_Omics1$loading_plot\n```\n\n<details><summary>plot</summary>\n\n::: {.cell-output-display}\n![](simple_code_files/figure-html/showcode_runcode_showoutput_6-3.png){width=672}\n:::\n\n\n\n</details>\n\n```{.r .cell-code}\nreduced_Omics1$scoreloading_plot\n```\n\n<details><summary>plot</summary>\n\n::: {.cell-output-display}\n![](simple_code_files/figure-html/showcode_runcode_showoutput_6-4.png){width=672}\n:::\n\n\n\n</details>\n:::\n\n\nWe then build a TPObject based on the data reduction result, which is used for saving information and pass them through steps in TriplotGUI.\n\n\n::: {.cell .styled-output fold.output='false'}\n\n```{.r .cell-code}\nscores=reduced_Omics1$object$scores\nloadings<-reduced_Omics1$object$loadings\nvariance<- reduced_Omics1$object$variance\nTPObject1<-makeTPO(scores=scores,\n                   loadings=loadings,\n                   variance=variance)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nMaking TriPlotObject (TPO)\n--------------------------\nLoading matrix has 20 variables and 20 components.\n\nScore matrix has 300 observations and 20 components.\n\nTPO has 0 attached correlations.\nTPO has 0 attached risks.\n```\n:::\n:::\n\n\n## Step 2: Exposures’ correlations & Outcomes’ associations\n\nThe correlations between principal component (PC) scores and food items were calculated using Pearson correlations, adjusting for confounders. The associations between PC scores and risk markers were investigated using linear regression (since all food variables are numeric).\n\nThe PC scores are saved in the TPObject and the TPObject can be directly used to calculate the correlation coefficients and p values with exposures(food variables) in the `makeCorr()` function, adjusting for confounders.\n\n\n\n::: {.cell .styled-output fold.output='false'}\n\n```{.r .cell-code}\nCorrelations_object<-makeCorr(TPObject=TPObject1,\n                              corrData=exposure1,\n                              confounder=covariates1,\n                              method=\"pearson\")\n```\n:::\n\n\nThe result of correlations are then added into the TPObject.\n\n\n::: {.cell .styled-output fold.output='false'}\n\n```{.r .cell-code}\nTPObject2<-addCorr(TPObject=TPObject1,\n                   Corr=Correlations_object$cor_estimate,\n                   Corr_p=Correlations_object$cor_pvalue)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nAdding correlation to TPO\n-------------------------\nPlease ensure same number of components in TPO and correlation matrix\n\nTPO has 11 attached correlations.\nTPO has 0 attached risks.\n```\n:::\n:::\n\n\nSimilarly, the risk estimates (beta coefficients from linear regression) and p values can be calculated from the PC scores saved in the TPObject and the outcome variables, adjusting for confounders.\n\n\n::: {.cell .styled-output fold.output='false'}\n\n```{.r .cell-code}\nRisks_object<-coefficient_get(TPObject=TPObject2,\n                              outcome=outcome1,\n                              confounder=covariates1)\n```\n:::\n\n\nThe result of risk estimates are then added into the TPObject.\n\n\n::: {.cell .styled-output fold.output='false'}\n\n```{.r .cell-code}\nTPObject3<-addRisk(TPObject=TPObject2,\n                   Risk=Risks_object)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nAdding risk to TPO\n------------------\nPlease add risks one by one with component in rows and estimates, se:s and (optionally) p-values in columns\nPlease ensure same number of components in TPO and risk matrix\n\nTPO has 11 attached correlations.\nTPO has 5 attached risks.\n```\n:::\n:::\n\n\n## Step 3: Visualization of Triplot\n\nGenerate Triplot: Note that Triplot can be generated from any TPObject.\n\n\n::: {.cell .styled-output fold.output='false'}\n\n```{.r .cell-code}\nTriplot_object3<-TriplotGUI(TPObject3,\n                            riskOR=F) #risks is shown as coeffcients, not odds ratio\n```\n:::\n\n\nPlotting the triplot\n\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\nTriplot_object3$triplot\n```\n\n<details><summary>plot</summary>\n\n::: {.cell-output-display}\n![](simple_code_files/figure-html/showcode_runcode_showoutput_10-1.png){width=672}\n:::\n\n\n\n</details>\n:::\n\n\nIn the triplot, PC1 reflected metabolites that were positively associated with BMI and also correlated with a high intake of meat and refined grains, adjusting for age and sex. This implies that the metabolite features that contributes most to PC1, are likely to provide useful information for a potential mechanism of how red meat and refrained grains intake may affect BMI.\n\n## Step 4: Mediation analysis and visualization\n\nMediation analysis is then performed using the conventional \"product\" method on the our exposures (i.e. Refined grains, Red meat), mediators (i.e. PC1 and PC2) and outcome (i.e. BMI) of interest, adjusting for age and sex for both exposure-mediator and mediator-outcome relationship.\n\n\n::: {.cell .styled-output fold.output='false'}\n\n```{.r .cell-code}\nmediation_object3<-\n  get_mediation_traditional (mediator=TPObject3$scores[,c(1:2),drop=F], \n                             # Specfiying at least 2 components so that there can be a 2-dimensional plot\n                             exposure=exposure1[,c(\"Refined_grains\",\"Red_meat\"),drop=F],\n                             outcome=outcome1[,\"BMI\",drop=F],\n                             confounder_ME=covariates1,\n                             confounder_OE=covariates1)\n```\n:::\n\n\nLook at the barplot to have a more direct view on direct, indirect and total effects for each combination\n\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\nmediation_plot_object3<-plot_mediation(mediation_object3)\n```\n:::\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\nmediation_plot_object3\n```\n\n<details><summary>plot</summary>\n\n::: {.cell-output-display}\n![](simple_code_files/figure-html/showcode_runcode_showoutput_11-1.png){width=672}\n:::\n\n\n\n</details>\n:::\n\n\n::: callout-note\nThe barplot showed direct, indirect and total effect for each exposure-mediator-outcome combination. It is a convenient tool to check the direction and magnitude of mediation estimates. Red color represents significant positive effect (p\\<0.05); Blue color represents significant negative effect (p\\<0.05). Grey represents insignificant effect. One star for p\\<0.05; Two stars for p\\<0.01; Three stars for p\\<0.001;\n:::\n\nAdd the mediation result into the TPObject.\n\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\nTPObject4<-add_mediation(TPObject3, mediation_object3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nAdding mediation to TPO\n-------------------------\nNote that the exposures, mediators and outcomes are selected and not necessarily reflect total number of variables\n\nTPO mediation has used 2 mediators, 2 exposures, 1 outcomes\nMediators are PC1, PC2 \nExposures are Refined_grains, Red_meat \nOutcomes are BMItessssssssssssssssssssssss1111111111111111111111111111111111111111111111111111111111111111111111111111222222222222222222222222222222222222222222222222222222222222222222333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333320 EO_names20 PC_names20 estimates20 p_values20 mediation_estimate_names20 Exposure_names20 Outcome_namesPC1 PC1 PC2 PC2 PC1 PC1 PC2 PC2 PC1 PC1 PC2 PC2 PC1 PC1 PC2 PC2 PC1 PC1 PC2 PC2sddddddsdfggggggggggggggggggggggggggggggg444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444441.187396e-20 8.1822e-22 2.315783e-06 1.4264e-06 0.4505731 0.1003014 0.001111641 0.003746183 0.002361381 0.01371697 0.002361381 0.01371697 0.0006457253 0.004530111 0.00866911 0.0272195 0.0006457253 0.004530111 0.00866911 0.027219520201234567891011121314151617181920DoneDONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNnnntesssssssssssssssssssssssssssssssssssssstesssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\n```\n:::\n:::\n\n\nMake the triplot with mediation.\n\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\nTriplot_object4<-mediation_triplot(TPObject4,\n                                   which_show = c(\"IE\",\"TE\")\n                                   )\n```\n:::\n\n\nOnly showing the mediation estimates (indirect and total effect).\n\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\nTriplot_object4$mediation_plot\n```\n\n<details><summary>plot</summary>\n\n::: {.cell-output-display}\n![](simple_code_files/figure-html/showcode_runcode_showoutput_13-1.png){width=672}\n:::\n\n\n\n</details>\n:::\n\n::: callout-note\nThe indirect effect is presented as triangle points and the total effect is presented as circles. While indirect effect can only be presented with a mediator(e.g. PC1, PC2), total effect is always there and the value remains the same for specific exposure-outcome pairs, regardless of which mediation analysis we want to present in the figure.\n:::\n\n\nPlotting the triplot with mediation\n\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\nTriplot_object4$final_plot\n```\n\n<details><summary>plot</summary>\n\n::: {.cell-output-display}\n![](simple_code_files/figure-html/showcode_runcode_showoutput_14-1.png){width=672}\n:::\n\n\n\n</details>\n:::\n\n\nBase on the barplot and the triplot with mediaiton, we observed a significant mediation effect through PC1 for Red_meat-BMI and refined_grain-BMI association. This further implies that the metabolite features that contributes to PC1 are likely to mediate the pathway from red meat and refined grain intake to BMI change.\n\n## Step 5: Compare correlations, associations and mediations\n\nUsers can check the heatmaps of correlations, risk estimations and mediation results from the TPObject through the `checkTPO_ggplot()` function in TriplotGUI.\n\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\ncheckTPObject4<-checkTPO_ggplot(TPObject4)\n```\n:::\n\n\nCorrelation coefficients and p values between PC scores and exposures:\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\ncheckTPObject4$corr_coefficients\n```\n\n<details><summary>plot</summary>\n\n::: {.cell-output-display}\n![](simple_code_files/figure-html/showcode_runcode_showoutput_15A-1.png){width=672}\n:::\n\n\n\n</details>\n:::\n\n\nRisk estimates(beta coefficients) and p values between PC scores and outcomes:\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\ncheckTPObject4$risk_coefficients\n```\n\n<details><summary>plot</summary>\n\n::: {.cell-output-display}\n![](simple_code_files/figure-html/showcode_runcode_showoutput_15B-1.png){width=672}\n:::\n\n\n\n</details>\n:::\n\n\nMediation estimates and p values for indirect effect(IE), direct effect(DE) and total effect(TE), proportion mediated(PM) and adjusted proportion mediated(APM): See [Details](workflow.qmd){target=\"_blank\"} for more details:\n\n::: {.cell .styled-output fold.plot='true'}\n\n```{.r .cell-code}\ncheckTPObject4$med_coefficients\n```\n\n<details><summary>plot</summary>\n\n::: {.cell-output-display}\n![](simple_code_files/figure-html/showcode_runcode_showoutput_15C-1.png){width=672}\n:::\n\n\n\n</details>\n:::\n\n\n::: callout-note\n-   One star for p\\<0.05; Two stars for p\\<0.01; Three stars for p\\<0.001.\n-   Note that in the plot of `checkTPbject4$med_coefficients`, only the selected exposures, mediators and outcomes that we use to do mediation on will show up. The rows in the heatmaps are mediators and the column represents exposure-outcome pairs. For each exposure_outcome pair, 5 result are shown: *IE* (indirect effect), *DE* (direct effect), *TE* (total effect), *PM*(Proportion Mediated) and *APM*(Adjusted Proportion Mediated). Please see [Details section](https://yingxiaoyan.gitlab.io/triplotgui_tutorial/workflow.html#5.2){target=\"_blank\"} for more information. The \"BK\" before the names of exposures-outcome pairs means that this mediation is using the Coventional Baron-Kenny \"product\" method.\n:::\n\n## Step 6: Download data\n\nWe can save all your output, including data, results and visualization output through the `save()` function as an rda file.\n\n\n::: {.cell .styled-output}\n\n```{.r .cell-code}\nsave(exposure1,Omics1,outcome1,covariates1,\n     reduced_Omics1,Correlations_object,Risks_objects,\n     mediation_object3,mediation_plot_object3,\n     TPObject1,TPObject2,TPObject3,TPObject4,\n     checkTPObject4,\n     \"Tutorial_simple_output.rda\")\n```\n:::\n",
    "supporting": [
      "simple_code_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}